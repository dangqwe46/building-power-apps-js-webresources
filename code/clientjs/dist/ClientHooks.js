/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var cds;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/CdsServiceClient.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/CdsServiceClient.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=CdsServiceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvZGF0YXZlcnNlLWlmeS9DZHNTZXJ2aWNlQ2xpZW50L0Nkc1NlcnZpY2VDbGllbnQuanM/M2YyYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxDQUFDLGNBQWMsRUFBQztBQUM3RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi9kYXRhdmVyc2UtaWZ5L0Nkc1NlcnZpY2VDbGllbnQvQ2RzU2VydmljZUNsaWVudC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNkc1NlcnZpY2VDbGllbnQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/CdsServiceClient.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/XrmContextServiceClient.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/XrmContextServiceClient.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.XrmContextCdsServiceClient = void 0;\r\nconst EntityCollection_1 = __webpack_require__(/*! ../../types/EntityCollection */ \"./node_modules/dataverse-ify/lib/types/EntityCollection.js\");\r\nconst EntityReference_1 = __webpack_require__(/*! ../../types/EntityReference */ \"./node_modules/dataverse-ify/lib/types/EntityReference.js\");\r\nconst odataify_1 = __webpack_require__(/*! ../odataify/odataify */ \"./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js\");\r\nconst __1 = __webpack_require__(/*! .. */ \"./node_modules/dataverse-ify/lib/dataverse-ify/index.js\");\r\nconst MetadataCache_1 = __webpack_require__(/*! ../../metadata/MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nclass XrmContextCdsServiceClient {\r\n    constructor(webApi) {\r\n        this._webApi = webApi;\r\n    }\r\n    create(entity) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const record = yield odataify_1.odataify(\"Create\", entity);\r\n            const response = yield this._webApi.createRecord(entity.logicalName, record);\r\n            return response.id;\r\n        });\r\n    }\r\n    update(entity) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // Get the primary key attribute\r\n            const entityMetadata = MetadataCache_1.getMetadataByLogicalName(entity.logicalName);\r\n            // Convert null lookups to EntityReferences with null guid so we can run a delete association\r\n            for (const attribute in entity) {\r\n                const navigation = entityMetadata.navigation && entityMetadata.navigation[attribute];\r\n                if (navigation && entity[attribute] == null) {\r\n                    // We don't support just nulling a pollymorphic lookup because we don't know which relationship\r\n                    // to null.\r\n                    entity[attribute] = new EntityReference_1.EntityReference(navigation[0].replace(\"mscrm.\", \"\"), null);\r\n                }\r\n            }\r\n            const record = yield odataify_1.odataify(\"Update\", entity);\r\n            let id = entity[entityMetadata.primaryIdAttribute];\r\n            // If there is no primary id attribute set, but the id is set then use that\r\n            if (!id && entity.id) {\r\n                id = entity.id;\r\n            }\r\n            else if (!id) {\r\n                throw new Error(\"Either id or the primary id attribute must be set to update the record\");\r\n            }\r\n            // Delete the lookups with null\r\n            // Support for updating related entities separately like we do in the node implementation\r\n            // otherwise we get \"CRM do not support direct update of Entity Reference properties, Use Navigation properties instead.\"\r\n            for (const attribute in record) {\r\n                if (attribute.endsWith(\"@odata.bind\") && record[attribute] && record[attribute].endsWith(\"(null)\")) {\r\n                    const dissassociateRequest = new (class {\r\n                        constructor() {\r\n                            this.target = {\r\n                                id: id,\r\n                                entityType: entity.logicalName,\r\n                            };\r\n                            this.relationship = attribute.substr(0, attribute.length - \"@odata.bind\".length);\r\n                        }\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        getMetadata() {\r\n                            return {\r\n                                parameterTypes: {},\r\n                                operationType: 2,\r\n                                operationName: \"Disassociate\",\r\n                            };\r\n                        }\r\n                    })();\r\n                    yield Xrm.WebApi.online.execute(dissassociateRequest);\r\n                    delete record[attribute];\r\n                }\r\n            }\r\n            try {\r\n                yield this._webApi.updateRecord(entity.logicalName, id, record);\r\n            }\r\n            catch (ex) {\r\n                throw new Error(\"Error during update:\" + ex.message);\r\n            }\r\n        });\r\n    }\r\n    delete(entity, id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (typeof entity == \"string\") {\r\n                yield this._webApi.deleteRecord(entity, id);\r\n            }\r\n            else {\r\n                const entityValue = entity;\r\n                yield this._webApi.deleteRecord(entityValue.logicalName, entityValue.id);\r\n            }\r\n        });\r\n    }\r\n    retrieve(entityName, id, columnSet) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let query = \"\";\r\n            const entityMetadata = MetadataCache_1.getMetadataByLogicalName(entityName);\r\n            const cols = [];\r\n            // When retreiving the activity parties - we simulate the SDK by making virtual fields\r\n            // for sender, to, cc, bcc, required, optional, organizer\r\n            const activitypartyAttributes = [\"to\", \"from\", \"cc\", \"bcc\", \"required\", \"optional\", \"organizer\"];\r\n            let hasActivityPartyExpand = false;\r\n            // Construct the select based on the columns requested\r\n            // true means we return all the attributes\r\n            if (columnSet && columnSet !== true) {\r\n                for (const attribute of columnSet) {\r\n                    if (activitypartyAttributes.indexOf(attribute) > -1) {\r\n                        hasActivityPartyExpand = true;\r\n                    }\r\n                    else {\r\n                        let correctedAttribute = attribute;\r\n                        // If the attribute is a navigation property then format it correctly\r\n                        if (entityMetadata.navigation) {\r\n                            const navigation = MetadataCache_1.caseInsensitiveSearch(attribute, entityMetadata.navigation);\r\n                            if (navigation) {\r\n                                correctedAttribute = \"_\" + attribute + \"_value\";\r\n                            }\r\n                        }\r\n                        cols.push(correctedAttribute);\r\n                    }\r\n                }\r\n                query = `?$select=${cols.join(\",\")}`;\r\n                if (hasActivityPartyExpand) {\r\n                    query += `&$expand=${entityName}_activity_parties($select=activitypartyid,_partyid_value,participationtypemask)`;\r\n                }\r\n            }\r\n            const response = yield this._webApi.retrieveRecord(entityName, id, query);\r\n            const sdkified = (yield __1.sdkify(response, entityName));\r\n            return sdkified;\r\n        });\r\n    }\r\n    getEntityLogicalNameFromFetch(fetch) {\r\n        let entityLogicalName = undefined;\r\n        if (typeof DOMParser != \"undefined\") {\r\n            const domParser = new DOMParser();\r\n            const parsedFetch = domParser.parseFromString(fetch, \"text/html\");\r\n            const entityNameNode = parsedFetch\r\n                .getElementsByTagName(\"fetch\")[0]\r\n                .getElementsByTagName(\"entity\")[0]\r\n                .getAttributeNode(\"name\");\r\n            entityLogicalName = entityNameNode ? entityNameNode.value : \"\";\r\n        }\r\n        else {\r\n            // Fall back to regex for when we are running inside a pure node test environment\r\n            const regex = /name=[\"']?([\\w]+)[\"']?/gm;\r\n            const match = regex.exec(fetch);\r\n            entityLogicalName = match && match.length > 0 ? match[1] : \"\";\r\n        }\r\n        if (entityLogicalName)\r\n            return entityLogicalName;\r\n        else\r\n            throw new Error(`Cannot find entityLogicalName from fetchxml ${fetch}`);\r\n    }\r\n    retrieveMultiple(fetchxml) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const logicalName = this.getEntityLogicalNameFromFetch(fetchxml);\r\n            const results = yield this._webApi.retrieveMultipleRecords(logicalName, \"?fetchXml=\" + encodeURIComponent(fetchxml));\r\n            const output = [];\r\n            for (const record of results.entities) {\r\n                const sdkified = (yield __1.sdkify(record, logicalName));\r\n                output.push(sdkified);\r\n            }\r\n            const entities = new EntityCollection_1.EntityCollection(output);\r\n            return entities;\r\n        });\r\n    }\r\n    associate(_entityName, _entityId, _relationship, _relatedEntities) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            throw new Error(\"Method not implemented.\");\r\n        });\r\n    }\r\n    disassociate(_entityName, _entityId, _relationship, _relatedEntities) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            throw new Error(\"Method not implemented.\");\r\n        });\r\n    }\r\n    execute(request) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const requestWebApi = yield odataify_1.odataify(\"Action\", request);\r\n            const response = yield this._webApi.online.execute(requestWebApi);\r\n            const responseText = yield response.text();\r\n            if (responseText && responseText.length > 0) {\r\n                return JSON.parse(responseText);\r\n            }\r\n            return undefined;\r\n        });\r\n    }\r\n}\r\nexports.XrmContextCdsServiceClient = XrmContextCdsServiceClient;\r\n//# sourceMappingURL=XrmContextServiceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/XrmContextServiceClient.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/index.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./CdsServiceClient */ \"./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/CdsServiceClient.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./XrmContextServiceClient */ \"./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/XrmContextServiceClient.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvZGF0YXZlcnNlLWlmeS9DZHNTZXJ2aWNlQ2xpZW50L2luZGV4LmpzPzY4M2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsQ0FBQyxjQUFjLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLCtHQUFvQjtBQUN6QyxhQUFhLG1CQUFPLENBQUMsNkhBQTJCO0FBQ2hEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL2RhdGF2ZXJzZS1pZnkvQ2RzU2VydmljZUNsaWVudC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xyXG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIG9bazJdID0gbVtrXTtcclxufSkpO1xyXG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcclxuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0Nkc1NlcnZpY2VDbGllbnRcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vWHJtQ29udGV4dFNlcnZpY2VDbGllbnRcIiksIGV4cG9ydHMpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/index.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./sdkify/sdkify */ \"./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/sdkify.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./odataify/odataify */ \"./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./CdsServiceClient */ \"./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/index.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvZGF0YXZlcnNlLWlmeS9pbmRleC5qcz9mYThiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyx3RkFBaUI7QUFDdEMsYUFBYSxtQkFBTyxDQUFDLGdHQUFxQjtBQUMxQyxhQUFhLG1CQUFPLENBQUMsb0dBQW9CO0FBQ3pDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL2RhdGF2ZXJzZS1pZnkvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcclxufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBvW2syXSA9IG1ba107XHJcbn0pKTtcclxudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XHJcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zZGtpZnkvc2RraWZ5XCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL29kYXRhaWZ5L29kYXRhaWZ5XCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0Nkc1NlcnZpY2VDbGllbnRcIiksIGV4cG9ydHMpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/index.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js":
/*!***************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.odataify = void 0;\r\nconst MetadataCache_1 = __webpack_require__(/*! ../../metadata/MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nconst StructuralProperty_1 = __webpack_require__(/*! ../../types/StructuralProperty */ \"./node_modules/dataverse-ify/lib/types/StructuralProperty.js\");\r\nconst odataifyFields_1 = __webpack_require__(/*! ./odataifyFields */ \"./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataifyFields.js\");\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction odataify(action, value) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const metadataCache = MetadataCache_1.getMetadataCache();\r\n        // Is the value an array or Entitycollection?\r\n        if (value.constructor.name == \"Array\") {\r\n            const odataRecords = [];\r\n            for (const record of value) {\r\n                const value = yield odataify(action, record);\r\n                odataRecords.push(value);\r\n            }\r\n            return odataRecords;\r\n        }\r\n        // EntityCollection\r\n        else if (value.entities != undefined) {\r\n            const odataValue = yield odataify(action, value.entities);\r\n            return odataValue;\r\n        }\r\n        const logicalName = value.logicalName;\r\n        if (!logicalName) {\r\n            throw new Error(\"logicalName property not found on object. This is needed to odataify the object.\");\r\n        }\r\n        let valueSet = false;\r\n        const metadata = metadataCache.entities && metadataCache.entities[logicalName];\r\n        if (metadata != null) {\r\n            valueSet = true;\r\n            // Entity\r\n            const entityMetadata = metadata;\r\n            const entityValue = value;\r\n            const output = Object.assign({}, entityValue);\r\n            // Add the metadata type\r\n            output[\"@odata.type\"] = \"Microsoft.Dynamics.CRM.\" + logicalName;\r\n            // Remove attributes that are not needed in the OData payload\r\n            delete output.id;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            delete output.logicalName;\r\n            delete output.formattedValues;\r\n            // Change the types for the odata payload\r\n            yield odataifyFields_1.odataifyFields(action, output, entityValue, entityMetadata);\r\n            // Format the Odata ID\r\n            switch (action) {\r\n                case \"Update\":\r\n                    // Remove the primary key\r\n                    delete output[entityMetadata.primaryIdAttribute];\r\n                    break;\r\n                case \"Action\":\r\n                    // The primary key must be odatified\r\n                    if (entityValue.id && entityValue.id) {\r\n                        output[`${entityMetadata.primaryIdAttribute}@odata.bind`] = `/${entityMetadata.collectionName}(${entityValue.id.toString()})`;\r\n                    }\r\n                    break;\r\n            }\r\n            return output;\r\n        }\r\n        // Action or Function\r\n        const webApiMetdata = metadataCache.actions && metadataCache.actions[logicalName];\r\n        if (webApiMetdata) {\r\n            valueSet = true;\r\n            // This is a web api action request\r\n            const request = value;\r\n            const webApiRequest = new (class {\r\n                getMetadata() {\r\n                    return webApiMetdata;\r\n                }\r\n            })();\r\n            const requestOdata = Object.assign(webApiRequest, request);\r\n            // Get the parameters\r\n            for (const field of Object.keys(requestOdata)) {\r\n                if (field == \"getMetadata\" || field == \"logicalName\")\r\n                    continue;\r\n                // odataify each field if it is an entity\r\n                const fieldValue = requestOdata[field];\r\n                // Get the type from the metadata\r\n                const parameterMetadata = webApiMetdata.parameterTypes[field];\r\n                if (parameterMetadata) {\r\n                    // If Taret - then change to EntityType\r\n                    if (field == \"Target\" && parameterMetadata.structuralProperty == StructuralProperty_1.StructuralProperty.ComplexType) {\r\n                        parameterMetadata.structuralProperty = StructuralProperty_1.StructuralProperty.EntityType;\r\n                    }\r\n                    switch (parameterMetadata.structuralProperty) {\r\n                        case StructuralProperty_1.StructuralProperty.EnumerationType:\r\n                        case StructuralProperty_1.StructuralProperty.PrimitiveType:\r\n                            requestOdata[field] = fieldValue;\r\n                            break;\r\n                        case StructuralProperty_1.StructuralProperty.Collection:\r\n                            const collection = fieldValue;\r\n                            if (collection && collection.length > 0) {\r\n                                requestOdata[field] = yield odataify(\"Create\", fieldValue);\r\n                            }\r\n                            break;\r\n                        case StructuralProperty_1.StructuralProperty.EntityType:\r\n                            // This is an entity record pointer\r\n                            const fieldValueAsEntityReference = fieldValue;\r\n                            const fieldValueAsEntity = fieldValue;\r\n                            if (fieldValueAsEntityReference.entityType && fieldValueAsEntityReference.id) {\r\n                                // See https://docs.microsoft.com/en-us/dynamics365/customer-engagement/developer/webapi/use-web-api-functions#pass-reference-to-an-entity-to-a-function\r\n                                requestOdata[field] = fieldValueAsEntityReference; //{'@odata.id':Entity.odatifyEntityReference(collectionName,fieldValueAsEntityReference.id)};\r\n                            }\r\n                            else if (fieldValueAsEntity.logicalName) {\r\n                                requestOdata[field] = yield odataify(\"Action\", fieldValue);\r\n                            }\r\n                            break;\r\n                        case StructuralProperty_1.StructuralProperty.Unknown:\r\n                        default:\r\n                            throw new Error(\"Unknown parameter type on action.\");\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error(`Unexpected parameter ${field} on execute Request`);\r\n                }\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            delete requestOdata.logicalName;\r\n            return requestOdata;\r\n        }\r\n        if (!valueSet) {\r\n            throw new Error(`Cannot odataify - no metadata found for ${logicalName}`);\r\n        }\r\n    });\r\n}\r\nexports.odataify = odataify;\r\n//# sourceMappingURL=odataify.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataifyFields.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataifyFields.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.odataifyFields = void 0;\r\nconst Entity_1 = __webpack_require__(/*! ../../types/Entity */ \"./node_modules/dataverse-ify/lib/types/Entity.js\");\r\nconst IEntityReference_1 = __webpack_require__(/*! ../../types/IEntityReference */ \"./node_modules/dataverse-ify/lib/types/IEntityReference.js\");\r\nconst odataify_1 = __webpack_require__(/*! ./odataify */ \"./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js\");\r\nconst MetadataCache_1 = __webpack_require__(/*! ../../metadata/MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nfunction odataifyFields(action, output, value, metadata) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        for (const field of Object.keys(output)) {\r\n            const fieldType = Object.prototype.toString.call(output[field]);\r\n            const fieldValue = output[field];\r\n            const fieldAttributeType = metadata.attributeTypes[field];\r\n            // Convert primitive types\r\n            switch (fieldAttributeType) {\r\n                case \"Integer\" /* Integer */:\r\n                    output[field] = fieldValue && parseInt(fieldValue);\r\n                    break;\r\n            }\r\n            switch (fieldType) {\r\n                case \"[object Undefined]\":\r\n                    // When setting a value to undefined it must be null when sent to the WebApi\r\n                    output[field] = null;\r\n                    break;\r\n                case \"[object Array]\":\r\n                    // Array of Activity Parties or enums\r\n                    // TODO: Add unit test for empty arrays\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    const itemArray = fieldValue;\r\n                    if (itemArray.length > 0) {\r\n                        // What is the type of the items\r\n                        const arrayType = itemArray[0].constructor.name;\r\n                        switch (arrayType) {\r\n                            case \"Number\":\r\n                                output[field] = itemArray.join(\",\");\r\n                                break;\r\n                            case \"Object\":\r\n                                // Is this an array of activity parties?\r\n                                const party = itemArray[0];\r\n                                if (party.partyid != null) {\r\n                                    const activityPartiesField = `${metadata.logicalName}_activity_parties`;\r\n                                    let activityParties = [];\r\n                                    // Does the activity parties array already exist?\r\n                                    if (!output[activityPartiesField]) {\r\n                                        output[activityPartiesField] = activityParties;\r\n                                    }\r\n                                    else {\r\n                                        activityParties = output[activityPartiesField];\r\n                                    }\r\n                                    for (const item of itemArray) {\r\n                                        const webapiParty = (yield odataify_1.odataify(\"Create\", item));\r\n                                        // Map to the participation type mask\r\n                                        let participationTypeMask;\r\n                                        switch (field) {\r\n                                            case \"bcc\":\r\n                                                participationTypeMask = 4 /* BCC_Recipient */;\r\n                                                break;\r\n                                            case \"cc\":\r\n                                                participationTypeMask = 3 /* CC_Recipient */;\r\n                                                break;\r\n                                            case \"optional\":\r\n                                                participationTypeMask = 6 /* Optional_attendee */;\r\n                                                break;\r\n                                            case \"requiredattendees\":\r\n                                                participationTypeMask = 5 /* Required_attendee */;\r\n                                                break;\r\n                                            case \"from\":\r\n                                                participationTypeMask = 1 /* Sender */;\r\n                                                break;\r\n                                            case \"to\":\r\n                                                participationTypeMask = 2 /* To_Recipient */;\r\n                                                break;\r\n                                            default:\r\n                                                throw new Error(`Cannot map participation type mask for field ${field}`);\r\n                                        }\r\n                                        webapiParty.participationtypemask = participationTypeMask;\r\n                                        activityParties.push(webapiParty);\r\n                                    }\r\n                                    // Remove the to/from/bcc/regarding field etc.\r\n                                    delete output[field];\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    else\r\n                        output[field] = null;\r\n                    break;\r\n                case \"[object Object]\":\r\n                    // Check if it's an EntityCollection\r\n                    if (Entity_1.Entity.containsFields(fieldValue, [\"entities\"])) {\r\n                        output[field] = yield odataify_1.odataify(action, fieldValue.entities);\r\n                    }\r\n                    // Create navigation properties for each entity reference\r\n                    // Check for entity reference\r\n                    else if (Entity_1.Entity.containsFields(fieldValue, [\"id\", \"entityType\"])) {\r\n                        const entityRef = fieldValue;\r\n                        let targetField = field;\r\n                        // If there are multiple navigation types, then convert to the correct field name by adding _<logicalname>\r\n                        const navigation = MetadataCache_1.caseInsensitiveSearch(field, metadata.navigation);\r\n                        if (navigation != null) {\r\n                            targetField = navigation.key;\r\n                            if (navigation.value.length > 1) {\r\n                                // This is a customer style field that has more than one target type\r\n                                targetField = targetField + \"_\" + entityRef.entityType;\r\n                            }\r\n                        }\r\n                        // Convert into odata navigation properties\r\n                        output[`${targetField}@odata.bind`] = yield IEntityReference_1.getNavigationPathForEntityReference(value, field);\r\n                        delete output[field];\r\n                    }\r\n                    break;\r\n                case \"[object Date]\":\r\n                    // If the time element is set for Date Time fields - format accordingly\r\n                    const dateValue = fieldValue;\r\n                    let dateString = dateValue.toJSON();\r\n                    // If the date field is DateOnly:DateOnly then trim the value to have no time\r\n                    if (dateString && metadata.attributeTypes[field] == \"DateOnly:DateOnly\") {\r\n                        dateString = dateString.substring(0, 10);\r\n                    }\r\n                    output[field] = dateString;\r\n                    break;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n}\r\nexports.odataifyFields = odataifyFields;\r\n//# sourceMappingURL=odataifyFields.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataifyFields.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/dateReviver.js":
/*!****************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/dateReviver.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.dateReviver = void 0;\r\nfunction dateReviver(_key, value) {\r\n    if (typeof value === \"string\") {\r\n        const a = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\r\n        if (a) {\r\n            return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6]));\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexports.dateReviver = dateReviver;\r\n//# sourceMappingURL=dateReviver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvZGF0YXZlcnNlLWlmeS9zZGtpZnkvZGF0ZVJldml2ZXIuanM/MzM1OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxDQUFDLGNBQWMsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLHdCQUF3QixFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUU7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL2RhdGF2ZXJzZS1pZnkvc2RraWZ5L2RhdGVSZXZpdmVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy5kYXRlUmV2aXZlciA9IHZvaWQgMDtcclxuZnVuY3Rpb24gZGF0ZVJldml2ZXIoX2tleSwgdmFsdWUpIHtcclxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICBjb25zdCBhID0gL14oXFxkezR9KS0oXFxkezJ9KS0oXFxkezJ9KVQoXFxkezJ9KTooXFxkezJ9KTooXFxkezJ9KD86XFwuXFxkKik/KVokLy5leGVjKHZhbHVlKTtcclxuICAgICAgICBpZiAoYSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3IERhdGUoRGF0ZS5VVEMoK2FbMV0sICthWzJdIC0gMSwgK2FbM10sICthWzRdLCArYVs1XSwgK2FbNl0pKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdmFsdWU7XHJcbn1cclxuZXhwb3J0cy5kYXRlUmV2aXZlciA9IGRhdGVSZXZpdmVyO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRlUmV2aXZlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/dateReviver.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/sdkify.js":
/*!***********************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/sdkify.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.sdkify = void 0;\r\n/* eslint-disable camelcase */\r\n/* eslint-disable @typescript-eslint/camelcase */\r\nconst EntityReference_1 = __webpack_require__(/*! ../../types/EntityReference */ \"./node_modules/dataverse-ify/lib/types/EntityReference.js\");\r\nconst AttributeTypes_1 = __webpack_require__(/*! ../../types/AttributeTypes */ \"./node_modules/dataverse-ify/lib/types/AttributeTypes.js\");\r\nconst EntityCollection_1 = __webpack_require__(/*! ../../types/EntityCollection */ \"./node_modules/dataverse-ify/lib/types/EntityCollection.js\");\r\nconst dateReviver_1 = __webpack_require__(/*! ./dateReviver */ \"./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/dateReviver.js\");\r\nconst getEntityMetadataFromRecord_1 = __webpack_require__(/*! ../../metadata/getEntityMetadataFromRecord */ \"./node_modules/dataverse-ify/lib/metadata/getEntityMetadataFromRecord.js\");\r\n// Remove the fields not needed (@ and _ fields)\r\nfunction removeNonSdkFields(entityRecord) {\r\n    for (const field of Object.keys(entityRecord)) {\r\n        if (field.startsWith(\"_\") || field.indexOf(\"@\") > -1) {\r\n            delete entityRecord[field];\r\n        }\r\n    }\r\n}\r\n// Expand out the activity party relationship array into to,from,bcc etc\r\nfunction expandActivityPartiesToFields(entityRecord, activityPartiesField) {\r\n    // In the UCI the expand navigation property returns a promise!\r\n    const parties = entityRecord[activityPartiesField];\r\n    let entities = [];\r\n    if (parties.entities) {\r\n        entities = parties.entities;\r\n    }\r\n    else {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        entities = parties;\r\n    }\r\n    for (const a of entities) {\r\n        let partyField = null;\r\n        // Determine which field to add to\r\n        switch (a.participationtypemask) {\r\n            case 4 /* BCC_Recipient */:\r\n                partyField = \"bcc\";\r\n                break;\r\n            case 3 /* CC_Recipient */:\r\n                partyField = \"cc\";\r\n                break;\r\n            case 6 /* Optional_attendee */:\r\n                partyField = \"optional\";\r\n                break;\r\n            case 5 /* Required_attendee */:\r\n                partyField = \"requiredattendees\";\r\n                break;\r\n            case 1 /* Sender */:\r\n                partyField = \"from\";\r\n                break;\r\n            case 2 /* To_Recipient */:\r\n                partyField = \"to\";\r\n                break;\r\n        }\r\n        if (partyField != null) {\r\n            let partyList = entityRecord[partyField];\r\n            if (partyList == null) {\r\n                partyList = [];\r\n                entityRecord[partyField] = partyList;\r\n            }\r\n            partyList.push(a);\r\n        }\r\n    }\r\n}\r\nfunction sdkifyArray(value, logicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const cdsRecords = [];\r\n        for (const record of value) {\r\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n            cdsRecords.push((yield sdkify(record, logicalName)));\r\n        }\r\n        return new EntityCollection_1.EntityCollection(cdsRecords);\r\n    });\r\n}\r\nfunction sdkifyEntityCollection(value, logicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = value;\r\n        const records = (yield sdkifyArray(response.entities, logicalName));\r\n        records.pagingCooking = response.nextLink;\r\n        return records;\r\n    });\r\n}\r\nfunction sdkifyEntity(entityRecord, logicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const entityMetadata = getEntityMetadataFromRecord_1.getEntityMetadataFromRecord(entityRecord, logicalName);\r\n        if (entityMetadata != null) {\r\n            // Formatted values hold the text labels\r\n            entityRecord.formattedValues = entityRecord.formattedValues || {};\r\n            let activityPartiesField;\r\n            // Turn each complex type property into the sdk fields\r\n            for (const field of Object.keys(entityRecord)) {\r\n                const posAt = field.lastIndexOf(\"@\");\r\n                const containsAt = posAt > -1;\r\n                const navigationProperty = field.endsWith(\"@Microsoft.Dynamics.CRM.lookuplogicalname\");\r\n                const underscore = field.startsWith(\"_\");\r\n                if ((!containsAt && !underscore) || navigationProperty) {\r\n                    let attributeValue = null;\r\n                    let attributeType = AttributeTypes_1.AttributeTypes.Unknown;\r\n                    let attributeLogicalName = field;\r\n                    const attributeNameWithoutAt = field.substr(0, posAt);\r\n                    /*\r\n                    We need to determine which type the field is here\r\n                    ---Dates---\r\n                    Dates we use the 'DateReviver' pattern\r\n                    however this is very inefficient since it runs the regex on every field value\r\n            \r\n                    ---EntityReference---\r\n                    Entity reference we can infer from the presence of the Microsoft.Dynamics.CRM.lookuplogicalname\r\n                    and Microsoft.Dynamics.CRM.associatednavigationproperty\r\n                    _parentcustomerid_value@Microsoft.Dynamics.CRM.associatednavigationproperty=parentcustomerid_account\r\n                    _parentcustomerid_value@Microsoft.Dynamics.CRM.lookuplogicalname=account\r\n                    _parentcustomerid_value@OData.Community.Display.V1.FormattedValue=xyz\r\n                                        \r\n                    _primarycontactid_value@Microsoft.Dynamics.CRM.associatednavigationproperty=primarycontactid\r\n                    _primarycontactid_value@Microsoft.Dynamics.CRM.lookuplogicalname=contact\r\n                    _primarycontactid_value@OData.Community.Display.V1.FormattedValue=xyz\r\n                    */\r\n                    if (navigationProperty) {\r\n                        attributeLogicalName = attributeNameWithoutAt;\r\n                    }\r\n                    const navigationPropertyName = attributeNameWithoutAt + \"@Microsoft.Dynamics.CRM.associatednavigationproperty\";\r\n                    const lookupLogicalName = attributeNameWithoutAt + \"@Microsoft.Dynamics.CRM.lookuplogicalname\";\r\n                    const formattedValueName = attributeLogicalName + \"@OData.Community.Display.V1.FormattedValue\";\r\n                    if (attributeLogicalName.endsWith(\"_activity_parties\")) {\r\n                        attributeType = AttributeTypes_1.AttributeTypes.EntityCollection;\r\n                    }\r\n                    else if (navigationProperty && entityRecord[lookupLogicalName] != null) {\r\n                        attributeType = AttributeTypes_1.AttributeTypes.EntityReference;\r\n                    }\r\n                    else {\r\n                        let metadataType = entityMetadata.attributeTypes[field];\r\n                        // For DateTimes, trim off the second part\r\n                        metadataType = metadataType != null ? metadataType.split(\":\")[0] : \"\";\r\n                        // TODO: Match strings to the optionset names?\r\n                        switch (metadataType) {\r\n                            case \"Optionset\":\r\n                                attributeType = AttributeTypes_1.AttributeTypes.OptionSetValue;\r\n                                break;\r\n                            case \"MultiSelect\":\r\n                                attributeType = AttributeTypes_1.AttributeTypes.MultiSelectOptionSetValue;\r\n                                break;\r\n                            case \"Money\":\r\n                                attributeType = AttributeTypes_1.AttributeTypes.Money;\r\n                                break;\r\n                            case \"DateOnly\":\r\n                            case \"DateAndTime\":\r\n                                attributeType = AttributeTypes_1.AttributeTypes.DateTime;\r\n                                break;\r\n                            /*---Aliased Value---\r\n                            There doesn't seem to be any way of determining of a returned field value is an aliased value\r\n                            This means that there is no way of determining the type from querying metadata.\r\n                            */\r\n                        }\r\n                    }\r\n                    // Add the formatted value if there is one\r\n                    if (entityRecord[formattedValueName] != null)\r\n                        entityRecord.formattedValues[attributeLogicalName] = entityRecord[formattedValueName];\r\n                    switch (attributeType) {\r\n                        case AttributeTypes_1.AttributeTypes.EntityReference:\r\n                            const entityType = entityRecord[lookupLogicalName];\r\n                            attributeValue = new EntityReference_1.EntityReference(entityType, entityRecord[attributeLogicalName], entityRecord[formattedValueName]);\r\n                            // Get the attribute logical name\r\n                            const lookupAttributeName = entityRecord[navigationPropertyName];\r\n                            if (attributeLogicalName.endsWith(\"_value\") && attributeLogicalName.startsWith(\"_\")) {\r\n                                attributeLogicalName = attributeLogicalName.substr(1, attributeLogicalName.length - \"_value\".length - 1);\r\n                            }\r\n                            else if (lookupAttributeName != null) {\r\n                                // Get the actual logical name of the attribute\r\n                                if (lookupAttributeName.endsWith(\"_\" + entityType)) {\r\n                                    const typePos = lookupAttributeName.lastIndexOf(\"_\" + entityType);\r\n                                    attributeLogicalName = lookupAttributeName.substr(0, typePos);\r\n                                }\r\n                                else {\r\n                                    attributeLogicalName = lookupAttributeName;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case AttributeTypes_1.AttributeTypes.Money:\r\n                            attributeValue = entityRecord[attributeLogicalName];\r\n                            break;\r\n                        case AttributeTypes_1.AttributeTypes.MultiSelectOptionSetValue:\r\n                            attributeValue = entityRecord[attributeLogicalName];\r\n                            if (attributeValue != null) {\r\n                                const valueStrings = attributeValue.split(\",\");\r\n                                const valueInts = [];\r\n                                for (const v of valueStrings.reverse()) {\r\n                                    valueInts.push(Number.parseInt(v));\r\n                                }\r\n                                attributeValue = valueInts;\r\n                            }\r\n                            if (entityRecord[formattedValueName] != null) {\r\n                                entityRecord.formattedValues[attributeLogicalName] = entityRecord[formattedValueName];\r\n                            }\r\n                            break;\r\n                        case AttributeTypes_1.AttributeTypes.OptionSetValue:\r\n                            attributeValue = entityRecord[attributeLogicalName];\r\n                            break;\r\n                        case AttributeTypes_1.AttributeTypes.EntityCollection:\r\n                            // Do we have the logical name of the relationship?\r\n                            let navigationLogicalName = \"\";\r\n                            if (field.endsWith(\"_activity_parties\")) {\r\n                                navigationLogicalName = \"activityparty\";\r\n                                activityPartiesField = field;\r\n                            }\r\n                            else if (entityMetadata.navigation[field] != null) {\r\n                                navigationLogicalName = entityMetadata.navigation[field][0];\r\n                            }\r\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n                            attributeValue = yield sdkify(entityRecord[attributeLogicalName], navigationLogicalName);\r\n                            break;\r\n                        case AttributeTypes_1.AttributeTypes.DateTime:\r\n                            attributeValue = new Date(Date.parse(entityRecord[attributeLogicalName]));\r\n                            break;\r\n                        default:\r\n                            // Default - set primitive type value\r\n                            attributeValue = entityRecord[attributeLogicalName];\r\n                            break;\r\n                    }\r\n                    entityRecord[attributeLogicalName] = attributeValue;\r\n                }\r\n            }\r\n            removeNonSdkFields(entityRecord);\r\n            // If this is an activity party then populate the correct 'virtual field'\r\n            if (activityPartiesField) {\r\n                expandActivityPartiesToFields(entityRecord, activityPartiesField);\r\n            }\r\n        }\r\n        entityRecord.logicalName = logicalName;\r\n        return entityRecord;\r\n    });\r\n}\r\nfunction sdkify(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nvalue, logicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (value.json) {\r\n            // This is a UCI response object and we need to await the json converstion\r\n            value = yield value.json();\r\n        }\r\n        if (value.responseText) {\r\n            // This is a raw execute response\r\n            value = JSON.parse(value.responseText, dateReviver_1.dateReviver);\r\n        }\r\n        if (value.entities != undefined) {\r\n            return sdkifyEntityCollection(value, logicalName);\r\n        }\r\n        else if (value.constructor.name == \"Array\") {\r\n            return sdkifyArray(value, logicalName);\r\n        }\r\n        else {\r\n            return sdkifyEntity(value, logicalName);\r\n        }\r\n    });\r\n}\r\nexports.sdkify = sdkify;\r\n//# sourceMappingURL=sdkify.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/sdkify.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n// Default exports for dataverse-ify\r\n// Excludes the xrm.webapi implementation - this must be imported explicitly\r\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/dataverse-ify/lib/types/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./metadata */ \"./node_modules/dataverse-ify/lib/metadata/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./dataverse-ify */ \"./node_modules/dataverse-ify/lib/dataverse-ify/index.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvaW5kZXguanM/NmE4YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxrQ0FBa0Msb0NBQW9DLGFBQWEsRUFBRSxFQUFFO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxDQUFDLGNBQWMsRUFBQztBQUM3RDtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLGdFQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQyxzRUFBWTtBQUNqQyxhQUFhLG1CQUFPLENBQUMsZ0ZBQWlCO0FBQ3RDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XHJcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgb1trMl0gPSBtW2tdO1xyXG59KSk7XHJcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xyXG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyBEZWZhdWx0IGV4cG9ydHMgZm9yIGRhdGF2ZXJzZS1pZnlcclxuLy8gRXhjbHVkZXMgdGhlIHhybS53ZWJhcGkgaW1wbGVtZW50YXRpb24gLSB0aGlzIG11c3QgYmUgaW1wb3J0ZWQgZXhwbGljaXRseVxyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbWV0YWRhdGFcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZGF0YXZlcnNlLWlmeVwiKSwgZXhwb3J0cyk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/index.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/metadata/MetadataCache.js":
/*!******************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/metadata/MetadataCache.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.caseInsensitiveSearch = exports.getMetadata = exports.getEntitySetName = exports.getMetadataFromEntitySet = exports.getMetadataByLogicalName = exports.getMetadataCache = exports.setMetadataCache = exports._metadataCache = void 0;\r\nexports._metadataCache = { entities: {}, entitySetNames: {}, actions: {} };\r\nfunction setMetadataCache(metadataCache) {\r\n    exports._metadataCache = Object.assign(Object.assign({}, exports._metadataCache), metadataCache);\r\n    // Add any EntitySetNames\r\n    exports._metadataCache.entitySetNames = exports._metadataCache.entitySetNames || {};\r\n    for (const logicalName in metadataCache.entities) {\r\n        exports._metadataCache.entitySetNames[logicalName] = metadataCache.entities[logicalName].collectionName;\r\n    }\r\n}\r\nexports.setMetadataCache = setMetadataCache;\r\nfunction getMetadataCache() {\r\n    if (exports._metadataCache == null) {\r\n        throw new Error(\"Metadata cache is not initialised. Ensure that setMetadata is called\");\r\n    }\r\n    return exports._metadataCache;\r\n}\r\nexports.getMetadataCache = getMetadataCache;\r\nfunction getMetadataByLogicalName(logicalName) {\r\n    const metadataCache = getMetadataCache();\r\n    const metadata = metadataCache.entities && metadataCache.entities[logicalName];\r\n    if (!metadata)\r\n        throw new Error(`Metadata not found for ${logicalName}. Please create the early bound types.`);\r\n    return metadata;\r\n}\r\nexports.getMetadataByLogicalName = getMetadataByLogicalName;\r\nconst entitySetNames = {};\r\nfunction getMetadataFromEntitySet(entitySetName) {\r\n    const metadataCache = getMetadataCache();\r\n    if (metadataCache.entities) {\r\n        // Check the metadata\r\n        for (const logicalName of Object.keys(metadataCache.entities)) {\r\n            // Check logical name\r\n            const metadata = metadataCache.entities[logicalName];\r\n            if (metadata.collectionName == entitySetName)\r\n                return metadata;\r\n        }\r\n    }\r\n    throw new Error(`Cannot find entity metadata for ${entitySetName}. Please generate early bound types`);\r\n}\r\nexports.getMetadataFromEntitySet = getMetadataFromEntitySet;\r\nfunction getEntitySetName(entityLogicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const metadataCache = getMetadataCache();\r\n        if (metadataCache.entitySetNames) {\r\n            // Check the generated metadata\r\n            const metadata = metadataCache.entitySetNames[entityLogicalName];\r\n            if (metadata != undefined) {\r\n                return metadata;\r\n            }\r\n        }\r\n        // Check the cache\r\n        if (entitySetNames[entityLogicalName] != undefined) {\r\n            return entitySetNames[entityLogicalName];\r\n        }\r\n        // Lookup the entity set name from the logical name\r\n        // We only lookup the entityset names automatically at the moment\r\n        try {\r\n            const entityMetadata = yield Xrm.Utility.getEntityMetadata(entityLogicalName, [\"EntitySetName\"]);\r\n            entitySetNames[entityLogicalName] = entityMetadata.EntitySetName;\r\n            return entityMetadata.EntitySetName;\r\n        }\r\n        catch (ex) {\r\n            throw new Error(`Just-In-Time retreival of EntitySetName for '${entityLogicalName}' failed: ${ex}\\nIdeally you should use setMetadataCache`);\r\n        }\r\n        //throw new Error(`Cannot find entity metadata for ${entityLogicalName}. Please generate early bound types`);\r\n    });\r\n}\r\nexports.getEntitySetName = getEntitySetName;\r\nfunction getMetadata(entity) {\r\n    const logicalName = entity.logicalName;\r\n    return getMetadataByLogicalName(logicalName);\r\n}\r\nexports.getMetadata = getMetadata;\r\nfunction caseInsensitiveSearch(key, values) {\r\n    key = key.toLowerCase();\r\n    for (const index in values) {\r\n        if (index.toLowerCase() == key) {\r\n            return {\r\n                key: index,\r\n                value: values[index],\r\n            };\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexports.caseInsensitiveSearch = caseInsensitiveSearch;\r\n//# sourceMappingURL=MetadataCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/metadata/getEntityMetadataFromRecord.js":
/*!********************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/metadata/getEntityMetadataFromRecord.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getEntityMetadataFromRecord = void 0;\r\nconst MetadataCache_1 = __webpack_require__(/*! ./MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nfunction getEntityMetadataFromRecord(entityRecord, logicalName) {\r\n    let entityMetadata;\r\n    const actionPrefix = \"Microsoft.Dynamics.CRM.\";\r\n    entityRecord.logicalName = entityRecord.logicalName || logicalName; // allow passing the logical name rather than using the @odata.context\r\n    if (entityRecord.logicalName == null) {\r\n        // Get the @data.context to get the logical name\r\n        // E.g. https://org.crm11.dynamics.com/api/data/v9.0/$metadata#accounts(name,parentaccountid)/$entity\r\n        const odatacontext = entityRecord[\"@odata.context\"];\r\n        const contextRegex = /\\$metadata#([\\w.]*)(\\([\\w()]*\\))?(\\/\\$entity)?/g;\r\n        const match = contextRegex.exec(odatacontext);\r\n        if (match != null && match.length > 1) {\r\n            const entitySetName = match[1];\r\n            if (entitySetName.startsWith(actionPrefix)) {\r\n                const actionName = entitySetName.substring(actionPrefix.length);\r\n                entityMetadata = MetadataCache_1.getMetadataByLogicalName(actionName);\r\n                if (entityMetadata != null) {\r\n                    entityRecord.logicalName = entityMetadata.logicalName;\r\n                }\r\n            }\r\n            else {\r\n                // Find the logical name from the entity set name\r\n                entityMetadata = MetadataCache_1.getMetadataFromEntitySet(entitySetName);\r\n                entityRecord.logicalName = entityMetadata.logicalName;\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Cannot find the odata.context to get the logical name\");\r\n        }\r\n    }\r\n    else {\r\n        // Get metadata\r\n        entityMetadata = MetadataCache_1.getMetadataByLogicalName(entityRecord.logicalName);\r\n    }\r\n    return entityMetadata;\r\n}\r\nexports.getEntityMetadataFromRecord = getEntityMetadataFromRecord;\r\n//# sourceMappingURL=getEntityMetadataFromRecord.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvbWV0YWRhdGEvZ2V0RW50aXR5TWV0YWRhdGFGcm9tUmVjb3JkLmpzPzJlMzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsQ0FBQyxjQUFjLEVBQUM7QUFDN0QsbUNBQW1DO0FBQ25DLHdCQUF3QixtQkFBTyxDQUFDLG1GQUFpQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSx1RUFBdUU7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvbWV0YWRhdGEvZ2V0RW50aXR5TWV0YWRhdGFGcm9tUmVjb3JkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy5nZXRFbnRpdHlNZXRhZGF0YUZyb21SZWNvcmQgPSB2b2lkIDA7XHJcbmNvbnN0IE1ldGFkYXRhQ2FjaGVfMSA9IHJlcXVpcmUoXCIuL01ldGFkYXRhQ2FjaGVcIik7XHJcbmZ1bmN0aW9uIGdldEVudGl0eU1ldGFkYXRhRnJvbVJlY29yZChlbnRpdHlSZWNvcmQsIGxvZ2ljYWxOYW1lKSB7XHJcbiAgICBsZXQgZW50aXR5TWV0YWRhdGE7XHJcbiAgICBjb25zdCBhY3Rpb25QcmVmaXggPSBcIk1pY3Jvc29mdC5EeW5hbWljcy5DUk0uXCI7XHJcbiAgICBlbnRpdHlSZWNvcmQubG9naWNhbE5hbWUgPSBlbnRpdHlSZWNvcmQubG9naWNhbE5hbWUgfHwgbG9naWNhbE5hbWU7IC8vIGFsbG93IHBhc3NpbmcgdGhlIGxvZ2ljYWwgbmFtZSByYXRoZXIgdGhhbiB1c2luZyB0aGUgQG9kYXRhLmNvbnRleHRcclxuICAgIGlmIChlbnRpdHlSZWNvcmQubG9naWNhbE5hbWUgPT0gbnVsbCkge1xyXG4gICAgICAgIC8vIEdldCB0aGUgQGRhdGEuY29udGV4dCB0byBnZXQgdGhlIGxvZ2ljYWwgbmFtZVxyXG4gICAgICAgIC8vIEUuZy4gaHR0cHM6Ly9vcmcuY3JtMTEuZHluYW1pY3MuY29tL2FwaS9kYXRhL3Y5LjAvJG1ldGFkYXRhI2FjY291bnRzKG5hbWUscGFyZW50YWNjb3VudGlkKS8kZW50aXR5XHJcbiAgICAgICAgY29uc3Qgb2RhdGFjb250ZXh0ID0gZW50aXR5UmVjb3JkW1wiQG9kYXRhLmNvbnRleHRcIl07XHJcbiAgICAgICAgY29uc3QgY29udGV4dFJlZ2V4ID0gL1xcJG1ldGFkYXRhIyhbXFx3Ll0qKShcXChbXFx3KCldKlxcKSk/KFxcL1xcJGVudGl0eSk/L2c7XHJcbiAgICAgICAgY29uc3QgbWF0Y2ggPSBjb250ZXh0UmVnZXguZXhlYyhvZGF0YWNvbnRleHQpO1xyXG4gICAgICAgIGlmIChtYXRjaCAhPSBudWxsICYmIG1hdGNoLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgY29uc3QgZW50aXR5U2V0TmFtZSA9IG1hdGNoWzFdO1xyXG4gICAgICAgICAgICBpZiAoZW50aXR5U2V0TmFtZS5zdGFydHNXaXRoKGFjdGlvblByZWZpeCkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGFjdGlvbk5hbWUgPSBlbnRpdHlTZXROYW1lLnN1YnN0cmluZyhhY3Rpb25QcmVmaXgubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgIGVudGl0eU1ldGFkYXRhID0gTWV0YWRhdGFDYWNoZV8xLmdldE1ldGFkYXRhQnlMb2dpY2FsTmFtZShhY3Rpb25OYW1lKTtcclxuICAgICAgICAgICAgICAgIGlmIChlbnRpdHlNZXRhZGF0YSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZW50aXR5UmVjb3JkLmxvZ2ljYWxOYW1lID0gZW50aXR5TWV0YWRhdGEubG9naWNhbE5hbWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyBGaW5kIHRoZSBsb2dpY2FsIG5hbWUgZnJvbSB0aGUgZW50aXR5IHNldCBuYW1lXHJcbiAgICAgICAgICAgICAgICBlbnRpdHlNZXRhZGF0YSA9IE1ldGFkYXRhQ2FjaGVfMS5nZXRNZXRhZGF0YUZyb21FbnRpdHlTZXQoZW50aXR5U2V0TmFtZSk7XHJcbiAgICAgICAgICAgICAgICBlbnRpdHlSZWNvcmQubG9naWNhbE5hbWUgPSBlbnRpdHlNZXRhZGF0YS5sb2dpY2FsTmFtZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgdGhlIG9kYXRhLmNvbnRleHQgdG8gZ2V0IHRoZSBsb2dpY2FsIG5hbWVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgLy8gR2V0IG1ldGFkYXRhXHJcbiAgICAgICAgZW50aXR5TWV0YWRhdGEgPSBNZXRhZGF0YUNhY2hlXzEuZ2V0TWV0YWRhdGFCeUxvZ2ljYWxOYW1lKGVudGl0eVJlY29yZC5sb2dpY2FsTmFtZSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZW50aXR5TWV0YWRhdGE7XHJcbn1cclxuZXhwb3J0cy5nZXRFbnRpdHlNZXRhZGF0YUZyb21SZWNvcmQgPSBnZXRFbnRpdHlNZXRhZGF0YUZyb21SZWNvcmQ7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEVudGl0eU1ldGFkYXRhRnJvbVJlY29yZC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/metadata/getEntityMetadataFromRecord.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/metadata/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/metadata/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvbWV0YWRhdGEvaW5kZXguanM/OTUyMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxrQ0FBa0Msb0NBQW9DLGFBQWEsRUFBRSxFQUFFO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxDQUFDLGNBQWMsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsbUZBQWlCO0FBQ3RDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL21ldGFkYXRhL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XHJcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgb1trMl0gPSBtW2tdO1xyXG59KSk7XHJcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xyXG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vTWV0YWRhdGFDYWNoZVwiKSwgZXhwb3J0cyk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/metadata/index.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/ActivityParty.js":
/*!***************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/ActivityParty.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.activitypartyMetadata = void 0;\r\nexports.activitypartyMetadata = {\r\n    typeName: \"mscrm.activityparty\",\r\n    logicalName: \"activityparty\",\r\n    collectionName: \"activityparties\",\r\n    primaryIdAttribute: \"activitypartyid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        addressusedemailcolumnnumber: \"Integer\",\r\n        effort: \"Double\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        instancetypecode: \"Optionset\",\r\n        participationtypemask: \"Optionset\",\r\n        // Date Formats\r\n        scheduledend: \"DateOnly:UserLocal\",\r\n        scheduledstart: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        activityid: [\"activitypointer\"],\r\n        partyid: [\"account\", \"contact\", \"knowledgearticle\", \"queue\", \"systemuser\"],\r\n    },\r\n};\r\n//# sourceMappingURL=ActivityParty.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvQWN0aXZpdHlQYXJ0eS5qcz8wN2RlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdELDZCQUE2QjtBQUM3Qiw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL0FjdGl2aXR5UGFydHkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLmFjdGl2aXR5cGFydHlNZXRhZGF0YSA9IHZvaWQgMDtcclxuZXhwb3J0cy5hY3Rpdml0eXBhcnR5TWV0YWRhdGEgPSB7XHJcbiAgICB0eXBlTmFtZTogXCJtc2NybS5hY3Rpdml0eXBhcnR5XCIsXHJcbiAgICBsb2dpY2FsTmFtZTogXCJhY3Rpdml0eXBhcnR5XCIsXHJcbiAgICBjb2xsZWN0aW9uTmFtZTogXCJhY3Rpdml0eXBhcnRpZXNcIixcclxuICAgIHByaW1hcnlJZEF0dHJpYnV0ZTogXCJhY3Rpdml0eXBhcnR5aWRcIixcclxuICAgIGF0dHJpYnV0ZVR5cGVzOiB7XHJcbiAgICAgICAgLy8gTnVtZXJpYyBUeXBlc1xyXG4gICAgICAgIGFkZHJlc3N1c2VkZW1haWxjb2x1bW5udW1iZXI6IFwiSW50ZWdlclwiLFxyXG4gICAgICAgIGVmZm9ydDogXCJEb3VibGVcIixcclxuICAgICAgICB2ZXJzaW9ubnVtYmVyOiBcIkJpZ0ludFwiLFxyXG4gICAgICAgIC8vIE9wdGlvbnNldHNcclxuICAgICAgICBpbnN0YW5jZXR5cGVjb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgICAgIHBhcnRpY2lwYXRpb250eXBlbWFzazogXCJPcHRpb25zZXRcIixcclxuICAgICAgICAvLyBEYXRlIEZvcm1hdHNcclxuICAgICAgICBzY2hlZHVsZWRlbmQ6IFwiRGF0ZU9ubHk6VXNlckxvY2FsXCIsXHJcbiAgICAgICAgc2NoZWR1bGVkc3RhcnQ6IFwiRGF0ZU9ubHk6VXNlckxvY2FsXCIsXHJcbiAgICB9LFxyXG4gICAgbmF2aWdhdGlvbjoge1xyXG4gICAgICAgIGFjdGl2aXR5aWQ6IFtcImFjdGl2aXR5cG9pbnRlclwiXSxcclxuICAgICAgICBwYXJ0eWlkOiBbXCJhY2NvdW50XCIsIFwiY29udGFjdFwiLCBcImtub3dsZWRnZWFydGljbGVcIiwgXCJxdWV1ZVwiLCBcInN5c3RlbXVzZXJcIl0sXHJcbiAgICB9LFxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BY3Rpdml0eVBhcnR5LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/ActivityParty.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/AttributeTypes.js":
/*!****************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/AttributeTypes.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AttributeTypes = void 0;\r\nvar AttributeTypes;\r\n(function (AttributeTypes) {\r\n    AttributeTypes[AttributeTypes[\"EntityCollection\"] = 0] = \"EntityCollection\";\r\n    AttributeTypes[AttributeTypes[\"EntityReference\"] = 1] = \"EntityReference\";\r\n    AttributeTypes[AttributeTypes[\"Money\"] = 2] = \"Money\";\r\n    AttributeTypes[AttributeTypes[\"OptionSetValue\"] = 3] = \"OptionSetValue\";\r\n    AttributeTypes[AttributeTypes[\"MultiSelectOptionSetValue\"] = 4] = \"MultiSelectOptionSetValue\";\r\n    AttributeTypes[AttributeTypes[\"Date\"] = 5] = \"Date\";\r\n    AttributeTypes[AttributeTypes[\"DateTime\"] = 6] = \"DateTime\";\r\n    AttributeTypes[AttributeTypes[\"Unknown\"] = 1000] = \"Unknown\";\r\n})(AttributeTypes = exports.AttributeTypes || (exports.AttributeTypes = {}));\r\n//# sourceMappingURL=AttributeTypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvQXR0cmlidXRlVHlwZXMuanM/YTgzMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxDQUFDLGNBQWMsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhDQUE4QyxzQkFBc0IsS0FBSztBQUMxRSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9BdHRyaWJ1dGVUeXBlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuQXR0cmlidXRlVHlwZXMgPSB2b2lkIDA7XHJcbnZhciBBdHRyaWJ1dGVUeXBlcztcclxuKGZ1bmN0aW9uIChBdHRyaWJ1dGVUeXBlcykge1xyXG4gICAgQXR0cmlidXRlVHlwZXNbQXR0cmlidXRlVHlwZXNbXCJFbnRpdHlDb2xsZWN0aW9uXCJdID0gMF0gPSBcIkVudGl0eUNvbGxlY3Rpb25cIjtcclxuICAgIEF0dHJpYnV0ZVR5cGVzW0F0dHJpYnV0ZVR5cGVzW1wiRW50aXR5UmVmZXJlbmNlXCJdID0gMV0gPSBcIkVudGl0eVJlZmVyZW5jZVwiO1xyXG4gICAgQXR0cmlidXRlVHlwZXNbQXR0cmlidXRlVHlwZXNbXCJNb25leVwiXSA9IDJdID0gXCJNb25leVwiO1xyXG4gICAgQXR0cmlidXRlVHlwZXNbQXR0cmlidXRlVHlwZXNbXCJPcHRpb25TZXRWYWx1ZVwiXSA9IDNdID0gXCJPcHRpb25TZXRWYWx1ZVwiO1xyXG4gICAgQXR0cmlidXRlVHlwZXNbQXR0cmlidXRlVHlwZXNbXCJNdWx0aVNlbGVjdE9wdGlvblNldFZhbHVlXCJdID0gNF0gPSBcIk11bHRpU2VsZWN0T3B0aW9uU2V0VmFsdWVcIjtcclxuICAgIEF0dHJpYnV0ZVR5cGVzW0F0dHJpYnV0ZVR5cGVzW1wiRGF0ZVwiXSA9IDVdID0gXCJEYXRlXCI7XHJcbiAgICBBdHRyaWJ1dGVUeXBlc1tBdHRyaWJ1dGVUeXBlc1tcIkRhdGVUaW1lXCJdID0gNl0gPSBcIkRhdGVUaW1lXCI7XHJcbiAgICBBdHRyaWJ1dGVUeXBlc1tBdHRyaWJ1dGVUeXBlc1tcIlVua25vd25cIl0gPSAxMDAwXSA9IFwiVW5rbm93blwiO1xyXG59KShBdHRyaWJ1dGVUeXBlcyA9IGV4cG9ydHMuQXR0cmlidXRlVHlwZXMgfHwgKGV4cG9ydHMuQXR0cmlidXRlVHlwZXMgPSB7fSkpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdHRyaWJ1dGVUeXBlcy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/AttributeTypes.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/Dictionary.js":
/*!************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/Dictionary.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=Dictionary.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvRGljdGlvbmFyeS5qcz9kYWU2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL0RpY3Rpb25hcnkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1EaWN0aW9uYXJ5LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/Dictionary.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/Entity.js":
/*!********************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/Entity.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Entity = void 0;\r\nconst MetadataCache_1 = __webpack_require__(/*! ../metadata/MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nconst EntityReference_1 = __webpack_require__(/*! ./EntityReference */ \"./node_modules/dataverse-ify/lib/types/EntityReference.js\");\r\nclass Entity {\r\n    static containsFields(instance, keys) {\r\n        let allOk = true;\r\n        for (const key of keys) {\r\n            allOk = allOk && instance.hasOwnProperty(key);\r\n            if (!allOk)\r\n                break;\r\n        }\r\n        return allOk;\r\n    }\r\n    static getCollectionNameForEntity(logicalName) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // Try using the simple collection name lookup\r\n            const collectionName = yield MetadataCache_1.getEntitySetName(logicalName);\r\n            return collectionName;\r\n        });\r\n    }\r\n    static toEntityReference(instance) {\r\n        return new EntityReference_1.EntityReference(instance.logicalName, instance.id);\r\n    }\r\n}\r\nexports.Entity = Entity;\r\n//# sourceMappingURL=Entity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvRW50aXR5LmpzPzgzZGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDJCQUEyQiwrREFBK0QsZ0JBQWdCLEVBQUUsRUFBRTtBQUM5RztBQUNBLG1DQUFtQyxNQUFNLDZCQUE2QixFQUFFLFlBQVksV0FBVyxFQUFFO0FBQ2pHLGtDQUFrQyxNQUFNLGlDQUFpQyxFQUFFLFlBQVksV0FBVyxFQUFFO0FBQ3BHLCtCQUErQixxRkFBcUY7QUFDcEg7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsQ0FBQyxjQUFjLEVBQUM7QUFDN0QsY0FBYztBQUNkLHdCQUF3QixtQkFBTyxDQUFDLDZGQUEyQjtBQUMzRCwwQkFBMEIsbUJBQU8sQ0FBQyxvRkFBbUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvRW50aXR5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xyXG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XHJcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cclxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XHJcbiAgICB9KTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLkVudGl0eSA9IHZvaWQgMDtcclxuY29uc3QgTWV0YWRhdGFDYWNoZV8xID0gcmVxdWlyZShcIi4uL21ldGFkYXRhL01ldGFkYXRhQ2FjaGVcIik7XHJcbmNvbnN0IEVudGl0eVJlZmVyZW5jZV8xID0gcmVxdWlyZShcIi4vRW50aXR5UmVmZXJlbmNlXCIpO1xyXG5jbGFzcyBFbnRpdHkge1xyXG4gICAgc3RhdGljIGNvbnRhaW5zRmllbGRzKGluc3RhbmNlLCBrZXlzKSB7XHJcbiAgICAgICAgbGV0IGFsbE9rID0gdHJ1ZTtcclxuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKSB7XHJcbiAgICAgICAgICAgIGFsbE9rID0gYWxsT2sgJiYgaW5zdGFuY2UuaGFzT3duUHJvcGVydHkoa2V5KTtcclxuICAgICAgICAgICAgaWYgKCFhbGxPaylcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYWxsT2s7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgZ2V0Q29sbGVjdGlvbk5hbWVGb3JFbnRpdHkobG9naWNhbE5hbWUpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICAvLyBUcnkgdXNpbmcgdGhlIHNpbXBsZSBjb2xsZWN0aW9uIG5hbWUgbG9va3VwXHJcbiAgICAgICAgICAgIGNvbnN0IGNvbGxlY3Rpb25OYW1lID0geWllbGQgTWV0YWRhdGFDYWNoZV8xLmdldEVudGl0eVNldE5hbWUobG9naWNhbE5hbWUpO1xyXG4gICAgICAgICAgICByZXR1cm4gY29sbGVjdGlvbk5hbWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgdG9FbnRpdHlSZWZlcmVuY2UoaW5zdGFuY2UpIHtcclxuICAgICAgICByZXR1cm4gbmV3IEVudGl0eVJlZmVyZW5jZV8xLkVudGl0eVJlZmVyZW5jZShpbnN0YW5jZS5sb2dpY2FsTmFtZSwgaW5zdGFuY2UuaWQpO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuRW50aXR5ID0gRW50aXR5O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1FbnRpdHkuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/Entity.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/EntityCollection.js":
/*!******************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/EntityCollection.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EntityCollection = void 0;\r\nclass EntityCollection {\r\n    constructor(entities) {\r\n        this.entities = [];\r\n        this.entities = entities;\r\n    }\r\n}\r\nexports.EntityCollection = EntityCollection;\r\n//# sourceMappingURL=EntityCollection.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvRW50aXR5Q29sbGVjdGlvbi5qcz84NmNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvRW50aXR5Q29sbGVjdGlvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuRW50aXR5Q29sbGVjdGlvbiA9IHZvaWQgMDtcclxuY2xhc3MgRW50aXR5Q29sbGVjdGlvbiB7XHJcbiAgICBjb25zdHJ1Y3RvcihlbnRpdGllcykge1xyXG4gICAgICAgIHRoaXMuZW50aXRpZXMgPSBbXTtcclxuICAgICAgICB0aGlzLmVudGl0aWVzID0gZW50aXRpZXM7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5FbnRpdHlDb2xsZWN0aW9uID0gRW50aXR5Q29sbGVjdGlvbjtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW50aXR5Q29sbGVjdGlvbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/EntityCollection.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/EntityReference.js":
/*!*****************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/EntityReference.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.fromEntityReference = exports.toEntityReference = exports.EntityReference = void 0;\r\nconst MetadataCache_1 = __webpack_require__(/*! ../metadata/MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nclass EntityReference {\r\n    constructor(logicalName, id, name) {\r\n        this.entityType = logicalName;\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n}\r\nexports.EntityReference = EntityReference;\r\nfunction toEntityReference(record) {\r\n    let id = record.id;\r\n    // Set the id field if not already\r\n    if (id == undefined || id === null) {\r\n        const metadata = MetadataCache_1.getMetadata(record);\r\n        id = record[metadata.primaryIdAttribute];\r\n    }\r\n    return {\r\n        id: id,\r\n        entityType: record.logicalName,\r\n    };\r\n}\r\nexports.toEntityReference = toEntityReference;\r\nfunction fromEntityReference(record, entityReference) {\r\n    if (record.logicalName !== entityReference.entityType)\r\n        throw new Error(`Cannot map ${entityReference.entityType} into ${record.logicalName}`);\r\n    record.id = entityReference.id;\r\n}\r\nexports.fromEntityReference = fromEntityReference;\r\n//# sourceMappingURL=EntityReference.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvRW50aXR5UmVmZXJlbmNlLmpzPzE4OTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsQ0FBQyxjQUFjLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcseUJBQXlCLEdBQUcsdUJBQXVCO0FBQ2pGLHdCQUF3QixtQkFBTyxDQUFDLDZGQUEyQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLHNDQUFzQywyQkFBMkIsUUFBUSxtQkFBbUI7QUFDNUY7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9FbnRpdHlSZWZlcmVuY2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLmZyb21FbnRpdHlSZWZlcmVuY2UgPSBleHBvcnRzLnRvRW50aXR5UmVmZXJlbmNlID0gZXhwb3J0cy5FbnRpdHlSZWZlcmVuY2UgPSB2b2lkIDA7XHJcbmNvbnN0IE1ldGFkYXRhQ2FjaGVfMSA9IHJlcXVpcmUoXCIuLi9tZXRhZGF0YS9NZXRhZGF0YUNhY2hlXCIpO1xyXG5jbGFzcyBFbnRpdHlSZWZlcmVuY2Uge1xyXG4gICAgY29uc3RydWN0b3IobG9naWNhbE5hbWUsIGlkLCBuYW1lKSB7XHJcbiAgICAgICAgdGhpcy5lbnRpdHlUeXBlID0gbG9naWNhbE5hbWU7XHJcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5FbnRpdHlSZWZlcmVuY2UgPSBFbnRpdHlSZWZlcmVuY2U7XHJcbmZ1bmN0aW9uIHRvRW50aXR5UmVmZXJlbmNlKHJlY29yZCkge1xyXG4gICAgbGV0IGlkID0gcmVjb3JkLmlkO1xyXG4gICAgLy8gU2V0IHRoZSBpZCBmaWVsZCBpZiBub3QgYWxyZWFkeVxyXG4gICAgaWYgKGlkID09IHVuZGVmaW5lZCB8fCBpZCA9PT0gbnVsbCkge1xyXG4gICAgICAgIGNvbnN0IG1ldGFkYXRhID0gTWV0YWRhdGFDYWNoZV8xLmdldE1ldGFkYXRhKHJlY29yZCk7XHJcbiAgICAgICAgaWQgPSByZWNvcmRbbWV0YWRhdGEucHJpbWFyeUlkQXR0cmlidXRlXTtcclxuICAgIH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaWQ6IGlkLFxyXG4gICAgICAgIGVudGl0eVR5cGU6IHJlY29yZC5sb2dpY2FsTmFtZSxcclxuICAgIH07XHJcbn1cclxuZXhwb3J0cy50b0VudGl0eVJlZmVyZW5jZSA9IHRvRW50aXR5UmVmZXJlbmNlO1xyXG5mdW5jdGlvbiBmcm9tRW50aXR5UmVmZXJlbmNlKHJlY29yZCwgZW50aXR5UmVmZXJlbmNlKSB7XHJcbiAgICBpZiAocmVjb3JkLmxvZ2ljYWxOYW1lICE9PSBlbnRpdHlSZWZlcmVuY2UuZW50aXR5VHlwZSlcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBtYXAgJHtlbnRpdHlSZWZlcmVuY2UuZW50aXR5VHlwZX0gaW50byAke3JlY29yZC5sb2dpY2FsTmFtZX1gKTtcclxuICAgIHJlY29yZC5pZCA9IGVudGl0eVJlZmVyZW5jZS5pZDtcclxufVxyXG5leHBvcnRzLmZyb21FbnRpdHlSZWZlcmVuY2UgPSBmcm9tRW50aXR5UmVmZXJlbmNlO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1FbnRpdHlSZWZlcmVuY2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/EntityReference.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/Guid.js":
/*!******************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/Guid.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.guidEqual = exports.trimGuid = void 0;\r\nfunction trimGuid(guid) {\r\n    return guid.replace(\"{\", \"\").replace(\"}\", \"\");\r\n}\r\nexports.trimGuid = trimGuid;\r\nfunction guidEqual(guid1, guid2) {\r\n    if (guid1 && guid2) {\r\n        return trimGuid(guid1).toLowerCase() == trimGuid(guid2).toLowerCase();\r\n    }\r\n    else if (!guid1 && !guid2) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexports.guidEqual = guidEqual;\r\n//# sourceMappingURL=Guid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvR3VpZC5qcz8yNGExIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGdCQUFnQjtBQUNwQztBQUNBLDBCQUEwQixpQkFBaUI7QUFDM0M7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL0d1aWQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLmd1aWRFcXVhbCA9IGV4cG9ydHMudHJpbUd1aWQgPSB2b2lkIDA7XHJcbmZ1bmN0aW9uIHRyaW1HdWlkKGd1aWQpIHtcclxuICAgIHJldHVybiBndWlkLnJlcGxhY2UoXCJ7XCIsIFwiXCIpLnJlcGxhY2UoXCJ9XCIsIFwiXCIpO1xyXG59XHJcbmV4cG9ydHMudHJpbUd1aWQgPSB0cmltR3VpZDtcclxuZnVuY3Rpb24gZ3VpZEVxdWFsKGd1aWQxLCBndWlkMikge1xyXG4gICAgaWYgKGd1aWQxICYmIGd1aWQyKSB7XHJcbiAgICAgICAgcmV0dXJuIHRyaW1HdWlkKGd1aWQxKS50b0xvd2VyQ2FzZSgpID09IHRyaW1HdWlkKGd1aWQyKS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoIWd1aWQxICYmICFndWlkMikge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG59XHJcbmV4cG9ydHMuZ3VpZEVxdWFsID0gZ3VpZEVxdWFsO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1HdWlkLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/Guid.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/IEntity.js":
/*!*********************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/IEntity.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=IEntity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvSUVudGl0eS5qcz9hNThiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL0lFbnRpdHkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1JRW50aXR5LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/IEntity.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/IEntityCollection.js":
/*!*******************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/IEntityCollection.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=IEntityCollection.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvSUVudGl0eUNvbGxlY3Rpb24uanM/MDIyOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxDQUFDLGNBQWMsRUFBQztBQUM3RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9JRW50aXR5Q29sbGVjdGlvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlFbnRpdHlDb2xsZWN0aW9uLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/IEntityCollection.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/IEntityReference.js":
/*!******************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/IEntityReference.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getNavigationPathForEntityReference = exports.odatifyEntityReference = void 0;\r\nconst Guid_1 = __webpack_require__(/*! ./Guid */ \"./node_modules/dataverse-ify/lib/types/Guid.js\");\r\nconst Entity_1 = __webpack_require__(/*! ./Entity */ \"./node_modules/dataverse-ify/lib/types/Entity.js\");\r\nfunction odatifyEntityReference(entitySetName, id) {\r\n    // We set null ids to string null so we can pick up and run a disassociate\r\n    return `${entitySetName}(${id == null ? \"null\" : Guid_1.trimGuid(id)})`;\r\n}\r\nexports.odatifyEntityReference = odatifyEntityReference;\r\nfunction getNavigationPathForEntityReference(entity, attributeLogicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const entityReference = entity[attributeLogicalName];\r\n        const collectionName = yield Entity_1.Entity.getCollectionNameForEntity(entityReference.entityType);\r\n        if (collectionName) {\r\n            return odatifyEntityReference(collectionName, entityReference.id);\r\n        }\r\n        throw new Error(`Cannot find navigation metadata for ${attributeLogicalName}`);\r\n    });\r\n}\r\nexports.getNavigationPathForEntityReference = getNavigationPathForEntityReference;\r\n//# sourceMappingURL=IEntityReference.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvSUVudGl0eVJlZmVyZW5jZS5qcz9kOTI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSwyQkFBMkIsK0RBQStELGdCQUFnQixFQUFFLEVBQUU7QUFDOUc7QUFDQSxtQ0FBbUMsTUFBTSw2QkFBNkIsRUFBRSxZQUFZLFdBQVcsRUFBRTtBQUNqRyxrQ0FBa0MsTUFBTSxpQ0FBaUMsRUFBRSxZQUFZLFdBQVcsRUFBRTtBQUNwRywrQkFBK0IscUZBQXFGO0FBQ3BIO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdELDJDQUEyQyxHQUFHLDhCQUE4QjtBQUM1RSxlQUFlLG1CQUFPLENBQUMsOERBQVE7QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsa0VBQVU7QUFDbkM7QUFDQTtBQUNBLGNBQWMsY0FBYyxHQUFHLDBDQUEwQztBQUN6RTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCxxQkFBcUI7QUFDcEYsS0FBSztBQUNMO0FBQ0EsMkNBQTJDO0FBQzNDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL0lFbnRpdHlSZWZlcmVuY2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuZ2V0TmF2aWdhdGlvblBhdGhGb3JFbnRpdHlSZWZlcmVuY2UgPSBleHBvcnRzLm9kYXRpZnlFbnRpdHlSZWZlcmVuY2UgPSB2b2lkIDA7XHJcbmNvbnN0IEd1aWRfMSA9IHJlcXVpcmUoXCIuL0d1aWRcIik7XHJcbmNvbnN0IEVudGl0eV8xID0gcmVxdWlyZShcIi4vRW50aXR5XCIpO1xyXG5mdW5jdGlvbiBvZGF0aWZ5RW50aXR5UmVmZXJlbmNlKGVudGl0eVNldE5hbWUsIGlkKSB7XHJcbiAgICAvLyBXZSBzZXQgbnVsbCBpZHMgdG8gc3RyaW5nIG51bGwgc28gd2UgY2FuIHBpY2sgdXAgYW5kIHJ1biBhIGRpc2Fzc29jaWF0ZVxyXG4gICAgcmV0dXJuIGAke2VudGl0eVNldE5hbWV9KCR7aWQgPT0gbnVsbCA/IFwibnVsbFwiIDogR3VpZF8xLnRyaW1HdWlkKGlkKX0pYDtcclxufVxyXG5leHBvcnRzLm9kYXRpZnlFbnRpdHlSZWZlcmVuY2UgPSBvZGF0aWZ5RW50aXR5UmVmZXJlbmNlO1xyXG5mdW5jdGlvbiBnZXROYXZpZ2F0aW9uUGF0aEZvckVudGl0eVJlZmVyZW5jZShlbnRpdHksIGF0dHJpYnV0ZUxvZ2ljYWxOYW1lKSB7XHJcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgIGNvbnN0IGVudGl0eVJlZmVyZW5jZSA9IGVudGl0eVthdHRyaWJ1dGVMb2dpY2FsTmFtZV07XHJcbiAgICAgICAgY29uc3QgY29sbGVjdGlvbk5hbWUgPSB5aWVsZCBFbnRpdHlfMS5FbnRpdHkuZ2V0Q29sbGVjdGlvbk5hbWVGb3JFbnRpdHkoZW50aXR5UmVmZXJlbmNlLmVudGl0eVR5cGUpO1xyXG4gICAgICAgIGlmIChjb2xsZWN0aW9uTmFtZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gb2RhdGlmeUVudGl0eVJlZmVyZW5jZShjb2xsZWN0aW9uTmFtZSwgZW50aXR5UmVmZXJlbmNlLmlkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZmluZCBuYXZpZ2F0aW9uIG1ldGFkYXRhIGZvciAke2F0dHJpYnV0ZUxvZ2ljYWxOYW1lfWApO1xyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0cy5nZXROYXZpZ2F0aW9uUGF0aEZvckVudGl0eVJlZmVyZW5jZSA9IGdldE5hdmlnYXRpb25QYXRoRm9yRW50aXR5UmVmZXJlbmNlO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1JRW50aXR5UmVmZXJlbmNlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/IEntityReference.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/OperationType.js":
/*!***************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/OperationType.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OperationType = void 0;\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"Action\"] = 0] = \"Action\";\r\n    OperationType[OperationType[\"Function\"] = 1] = \"Function\";\r\n    OperationType[OperationType[\"CRUD\"] = 2] = \"CRUD\";\r\n})(OperationType = exports.OperationType || (exports.OperationType = {}));\r\n//# sourceMappingURL=OperationType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvT3BlcmF0aW9uVHlwZS5qcz9kNDI2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0Q0FBNEMscUJBQXFCLEtBQUs7QUFDdkUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvT3BlcmF0aW9uVHlwZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuT3BlcmF0aW9uVHlwZSA9IHZvaWQgMDtcclxudmFyIE9wZXJhdGlvblR5cGU7XHJcbihmdW5jdGlvbiAoT3BlcmF0aW9uVHlwZSkge1xyXG4gICAgT3BlcmF0aW9uVHlwZVtPcGVyYXRpb25UeXBlW1wiQWN0aW9uXCJdID0gMF0gPSBcIkFjdGlvblwiO1xyXG4gICAgT3BlcmF0aW9uVHlwZVtPcGVyYXRpb25UeXBlW1wiRnVuY3Rpb25cIl0gPSAxXSA9IFwiRnVuY3Rpb25cIjtcclxuICAgIE9wZXJhdGlvblR5cGVbT3BlcmF0aW9uVHlwZVtcIkNSVURcIl0gPSAyXSA9IFwiQ1JVRFwiO1xyXG59KShPcGVyYXRpb25UeXBlID0gZXhwb3J0cy5PcGVyYXRpb25UeXBlIHx8IChleHBvcnRzLk9wZXJhdGlvblR5cGUgPSB7fSkpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1PcGVyYXRpb25UeXBlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/OperationType.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/ParameterType.js":
/*!***************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/ParameterType.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=ParameterType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvUGFyYW1ldGVyVHlwZS5qcz83Y2E3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL1BhcmFtZXRlclR5cGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJhbWV0ZXJUeXBlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/ParameterType.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/RequestWithTarget.js":
/*!*******************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/RequestWithTarget.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=RequestWithTarget.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvUmVxdWVzdFdpdGhUYXJnZXQuanM/NjYyNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxDQUFDLGNBQWMsRUFBQztBQUM3RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9SZXF1ZXN0V2l0aFRhcmdldC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlcXVlc3RXaXRoVGFyZ2V0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/RequestWithTarget.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/StructuralProperty.js":
/*!********************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/StructuralProperty.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StructuralProperty = void 0;\r\nvar StructuralProperty;\r\n(function (StructuralProperty) {\r\n    StructuralProperty[StructuralProperty[\"Unknown\"] = 0] = \"Unknown\";\r\n    StructuralProperty[StructuralProperty[\"PrimitiveType\"] = 1] = \"PrimitiveType\";\r\n    StructuralProperty[StructuralProperty[\"ComplexType\"] = 2] = \"ComplexType\";\r\n    StructuralProperty[StructuralProperty[\"EnumerationType\"] = 3] = \"EnumerationType\";\r\n    StructuralProperty[StructuralProperty[\"Collection\"] = 4] = \"Collection\";\r\n    StructuralProperty[StructuralProperty[\"EntityType\"] = 5] = \"EntityType\";\r\n})(StructuralProperty = exports.StructuralProperty || (exports.StructuralProperty = {}));\r\n//# sourceMappingURL=StructuralProperty.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvU3RydWN0dXJhbFByb3BlcnR5LmpzPzU4ZTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsQ0FBQyxjQUFjLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNEQUFzRCwwQkFBMEIsS0FBSztBQUN0RiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9TdHJ1Y3R1cmFsUHJvcGVydHkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLlN0cnVjdHVyYWxQcm9wZXJ0eSA9IHZvaWQgMDtcclxudmFyIFN0cnVjdHVyYWxQcm9wZXJ0eTtcclxuKGZ1bmN0aW9uIChTdHJ1Y3R1cmFsUHJvcGVydHkpIHtcclxuICAgIFN0cnVjdHVyYWxQcm9wZXJ0eVtTdHJ1Y3R1cmFsUHJvcGVydHlbXCJVbmtub3duXCJdID0gMF0gPSBcIlVua25vd25cIjtcclxuICAgIFN0cnVjdHVyYWxQcm9wZXJ0eVtTdHJ1Y3R1cmFsUHJvcGVydHlbXCJQcmltaXRpdmVUeXBlXCJdID0gMV0gPSBcIlByaW1pdGl2ZVR5cGVcIjtcclxuICAgIFN0cnVjdHVyYWxQcm9wZXJ0eVtTdHJ1Y3R1cmFsUHJvcGVydHlbXCJDb21wbGV4VHlwZVwiXSA9IDJdID0gXCJDb21wbGV4VHlwZVwiO1xyXG4gICAgU3RydWN0dXJhbFByb3BlcnR5W1N0cnVjdHVyYWxQcm9wZXJ0eVtcIkVudW1lcmF0aW9uVHlwZVwiXSA9IDNdID0gXCJFbnVtZXJhdGlvblR5cGVcIjtcclxuICAgIFN0cnVjdHVyYWxQcm9wZXJ0eVtTdHJ1Y3R1cmFsUHJvcGVydHlbXCJDb2xsZWN0aW9uXCJdID0gNF0gPSBcIkNvbGxlY3Rpb25cIjtcclxuICAgIFN0cnVjdHVyYWxQcm9wZXJ0eVtTdHJ1Y3R1cmFsUHJvcGVydHlbXCJFbnRpdHlUeXBlXCJdID0gNV0gPSBcIkVudGl0eVR5cGVcIjtcclxufSkoU3RydWN0dXJhbFByb3BlcnR5ID0gZXhwb3J0cy5TdHJ1Y3R1cmFsUHJvcGVydHkgfHwgKGV4cG9ydHMuU3RydWN0dXJhbFByb3BlcnR5ID0ge30pKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RydWN0dXJhbFByb3BlcnR5LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/StructuralProperty.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/WebApiExecuteRequest.js":
/*!**********************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/WebApiExecuteRequest.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=WebApiExecuteRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvV2ViQXBpRXhlY3V0ZVJlcXVlc3QuanM/M2YwZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxDQUFDLGNBQWMsRUFBQztBQUM3RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9XZWJBcGlFeGVjdXRlUmVxdWVzdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdlYkFwaUV4ZWN1dGVSZXF1ZXN0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/WebApiExecuteRequest.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/WebApiRequest.js":
/*!***************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/WebApiRequest.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=WebApiRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvV2ViQXBpUmVxdWVzdC5qcz8wN2ZhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL1dlYkFwaVJlcXVlc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1XZWJBcGlSZXF1ZXN0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/WebApiRequest.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./ActivityParty */ \"./node_modules/dataverse-ify/lib/types/ActivityParty.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./AttributeTypes */ \"./node_modules/dataverse-ify/lib/types/AttributeTypes.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./Dictionary */ \"./node_modules/dataverse-ify/lib/types/Dictionary.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./Entity */ \"./node_modules/dataverse-ify/lib/types/Entity.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./EntityCollection */ \"./node_modules/dataverse-ify/lib/types/EntityCollection.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./EntityReference */ \"./node_modules/dataverse-ify/lib/types/EntityReference.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./Guid */ \"./node_modules/dataverse-ify/lib/types/Guid.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./IEntity */ \"./node_modules/dataverse-ify/lib/types/IEntity.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./IEntityCollection */ \"./node_modules/dataverse-ify/lib/types/IEntityCollection.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./OperationType */ \"./node_modules/dataverse-ify/lib/types/OperationType.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ParameterType */ \"./node_modules/dataverse-ify/lib/types/ParameterType.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./RequestWithTarget */ \"./node_modules/dataverse-ify/lib/types/RequestWithTarget.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./StructuralProperty */ \"./node_modules/dataverse-ify/lib/types/StructuralProperty.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./WebApiExecuteRequest */ \"./node_modules/dataverse-ify/lib/types/WebApiExecuteRequest.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./WebApiRequest */ \"./node_modules/dataverse-ify/lib/types/WebApiRequest.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./requests */ \"./node_modules/dataverse-ify/lib/types/requests/index.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvaW5kZXguanM/MzU4YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxrQ0FBa0Msb0NBQW9DLGFBQWEsRUFBRSxFQUFFO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxDQUFDLGNBQWMsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsZ0ZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQyxrRkFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLDBFQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyxrRUFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsc0ZBQW9CO0FBQ3pDLGFBQWEsbUJBQU8sQ0FBQyxvRkFBbUI7QUFDeEMsYUFBYSxtQkFBTyxDQUFDLDhEQUFRO0FBQzdCLGFBQWEsbUJBQU8sQ0FBQyxvRUFBVztBQUNoQyxhQUFhLG1CQUFPLENBQUMsd0ZBQXFCO0FBQzFDLGFBQWEsbUJBQU8sQ0FBQyxnRkFBaUI7QUFDdEMsYUFBYSxtQkFBTyxDQUFDLGdGQUFpQjtBQUN0QyxhQUFhLG1CQUFPLENBQUMsd0ZBQXFCO0FBQzFDLGFBQWEsbUJBQU8sQ0FBQywwRkFBc0I7QUFDM0MsYUFBYSxtQkFBTyxDQUFDLDhGQUF3QjtBQUM3QyxhQUFhLG1CQUFPLENBQUMsZ0ZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQyw0RUFBWTtBQUNqQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xyXG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIG9bazJdID0gbVtrXTtcclxufSkpO1xyXG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcclxuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0FjdGl2aXR5UGFydHlcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQXR0cmlidXRlVHlwZXNcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vRGljdGlvbmFyeVwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9FbnRpdHlcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vRW50aXR5Q29sbGVjdGlvblwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9FbnRpdHlSZWZlcmVuY2VcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vR3VpZFwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9JRW50aXR5XCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0lFbnRpdHlDb2xsZWN0aW9uXCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL09wZXJhdGlvblR5cGVcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUGFyYW1ldGVyVHlwZVwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9SZXF1ZXN0V2l0aFRhcmdldFwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9TdHJ1Y3R1cmFsUHJvcGVydHlcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vV2ViQXBpRXhlY3V0ZVJlcXVlc3RcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vV2ViQXBpUmVxdWVzdFwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yZXF1ZXN0c1wiKSwgZXhwb3J0cyk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/index.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/requests/AssociateRequest.js":
/*!***************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/requests/AssociateRequest.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=AssociateRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvcmVxdWVzdHMvQXNzb2NpYXRlUmVxdWVzdC5qcz84NjFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL3JlcXVlc3RzL0Fzc29jaWF0ZVJlcXVlc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Bc3NvY2lhdGVSZXF1ZXN0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/requests/AssociateRequest.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/requests/DisassociateRequest.js":
/*!******************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/requests/DisassociateRequest.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=DisassociateRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvcmVxdWVzdHMvRGlzYXNzb2NpYXRlUmVxdWVzdC5qcz8zMDQ5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLENBQUMsY0FBYyxFQUFDO0FBQzdEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL3JlcXVlc3RzL0Rpc2Fzc29jaWF0ZVJlcXVlc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1EaXNhc3NvY2lhdGVSZXF1ZXN0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/requests/DisassociateRequest.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/requests/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/requests/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./AssociateRequest */ \"./node_modules/dataverse-ify/lib/types/requests/AssociateRequest.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./DisassociateRequest */ \"./node_modules/dataverse-ify/lib/types/requests/DisassociateRequest.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvcmVxdWVzdHMvaW5kZXguanM/OWIzYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxrQ0FBa0Msb0NBQW9DLGFBQWEsRUFBRSxFQUFFO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxDQUFDLGNBQWMsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsK0ZBQW9CO0FBQ3pDLGFBQWEsbUJBQU8sQ0FBQyxxR0FBdUI7QUFDNUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvcmVxdWVzdHMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcclxufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBvW2syXSA9IG1ba107XHJcbn0pKTtcclxudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XHJcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Bc3NvY2lhdGVSZXF1ZXN0XCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0Rpc2Fzc29jaWF0ZVJlcXVlc3RcIiksIGV4cG9ydHMpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/requests/index.js\n");

/***/ }),

/***/ "./src/Forms/AccountForm.ts":
/*!**********************************!*\
  !*** ./src/Forms/AccountForm.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AccountForm\": () => (/* binding */ AccountForm)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar AccountForm = /** @class */ (function () {\r\n    function AccountForm() {\r\n    }\r\n    AccountForm.onload = function (context) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                context.getFormContext().getAttribute(\"websiteurl\" /* WebSiteURL */).addOnChange(AccountForm.onWebsiteChanged);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    AccountForm.onWebsiteChanged = function (context) {\r\n        var formContext = context.getFormContext();\r\n        var websiteAttribute = formContext.getAttribute(\"websiteurl\" /* WebSiteURL */);\r\n        var websiteRegex = /^(https?:\\/\\/)?([\\w\\d]+\\.)?[\\w\\d]+\\.\\w+\\/?.+$/g;\r\n        var match = websiteAttribute.getValue().match(websiteRegex);\r\n        var isValid = match != null;\r\n        websiteAttribute.controls.forEach(function (c) {\r\n            if (isValid) {\r\n                c.clearNotification(\"websiteurl\" /* WebSiteURL */);\r\n            }\r\n            else {\r\n                c.setNotification(\"Invalid Website Address\", \"websiteurl\" /* WebSiteURL */);\r\n            }\r\n        });\r\n    };\r\n    return AccountForm;\r\n}());\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9zcmMvRm9ybXMvQWNjb3VudEZvcm0udHM/ZmE3YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7SUFBQTtJQW1CQSxDQUFDO0lBbEJjLGtCQUFNLEdBQW5CLFVBQW9CLE9BQWdDOzs7Z0JBQ2xELE9BQU8sQ0FBQyxjQUFjLEVBQUUsQ0FBQyxZQUFZLCtCQUE4QixDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQzs7OztLQUMvRztJQUNNLDRCQUFnQixHQUF2QixVQUF3QixPQUFnQztRQUN0RCxJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDN0MsSUFBTSxnQkFBZ0IsR0FBRyxXQUFXLENBQUMsWUFBWSwrQkFBOEIsQ0FBQztRQUNoRixJQUFNLFlBQVksR0FBRyxnREFBZ0QsQ0FBQztRQUN0RSxJQUFNLEtBQUssR0FBRyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDOUQsSUFBTSxPQUFPLEdBQUcsS0FBSyxJQUFJLElBQUksQ0FBQztRQUU5QixnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQUMsQ0FBQztZQUNsQyxJQUFJLE9BQU8sRUFBRTtnQkFDVixDQUFnQyxDQUFDLGlCQUFpQiwrQkFBOEIsQ0FBQzthQUNuRjtpQkFBTTtnQkFDSixDQUFnQyxDQUFDLGVBQWUsQ0FBQyx5QkFBeUIsZ0NBQStCLENBQUM7YUFDNUc7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFDSCxrQkFBQztBQUFELENBQUMiLCJmaWxlIjoiLi9zcmMvRm9ybXMvQWNjb3VudEZvcm0udHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY2NvdW50QXR0cmlidXRlcyB9IGZyb20gXCIuLi9kYXRhdmVyc2UtZ2VuL2VudGl0aWVzL0FjY291bnRcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBBY2NvdW50Rm9ybSB7XHJcbiAgc3RhdGljIGFzeW5jIG9ubG9hZChjb250ZXh0OiBYcm0uRXZlbnRzLkV2ZW50Q29udGV4dCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgY29udGV4dC5nZXRGb3JtQ29udGV4dCgpLmdldEF0dHJpYnV0ZShBY2NvdW50QXR0cmlidXRlcy5XZWJTaXRlVVJMKS5hZGRPbkNoYW5nZShBY2NvdW50Rm9ybS5vbldlYnNpdGVDaGFuZ2VkKTtcclxuICB9XHJcbiAgc3RhdGljIG9uV2Vic2l0ZUNoYW5nZWQoY29udGV4dDogWHJtLkV2ZW50cy5FdmVudENvbnRleHQpOiB2b2lkIHtcclxuICAgIGNvbnN0IGZvcm1Db250ZXh0ID0gY29udGV4dC5nZXRGb3JtQ29udGV4dCgpO1xyXG4gICAgY29uc3Qgd2Vic2l0ZUF0dHJpYnV0ZSA9IGZvcm1Db250ZXh0LmdldEF0dHJpYnV0ZShBY2NvdW50QXR0cmlidXRlcy5XZWJTaXRlVVJMKTtcclxuICAgIGNvbnN0IHdlYnNpdGVSZWdleCA9IC9eKGh0dHBzPzpcXC9cXC8pPyhbXFx3XFxkXStcXC4pP1tcXHdcXGRdK1xcLlxcdytcXC8/LiskL2c7XHJcbiAgICBjb25zdCBtYXRjaCA9IHdlYnNpdGVBdHRyaWJ1dGUuZ2V0VmFsdWUoKS5tYXRjaCh3ZWJzaXRlUmVnZXgpO1xyXG4gICAgY29uc3QgaXNWYWxpZCA9IG1hdGNoICE9IG51bGw7XHJcblxyXG4gICAgd2Vic2l0ZUF0dHJpYnV0ZS5jb250cm9scy5mb3JFYWNoKChjKSA9PiB7XHJcbiAgICAgIGlmIChpc1ZhbGlkKSB7XHJcbiAgICAgICAgKGMgYXMgWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2wpLmNsZWFyTm90aWZpY2F0aW9uKEFjY291bnRBdHRyaWJ1dGVzLldlYlNpdGVVUkwpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIChjIGFzIFhybS5Db250cm9scy5TdHJpbmdDb250cm9sKS5zZXROb3RpZmljYXRpb24oXCJJbnZhbGlkIFdlYnNpdGUgQWRkcmVzc1wiLCBBY2NvdW50QXR0cmlidXRlcy5XZWJTaXRlVVJMKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Forms/AccountForm.ts\n");

/***/ }),

/***/ "./src/Ribbon/AccountRibbon.ts":
/*!*************************************!*\
  !*** ./src/Ribbon/AccountRibbon.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AccountRibbon\": () => (/* binding */ AccountRibbon)\n/* harmony export */ });\n/* harmony import */ var dataverse_ify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dataverse-ify */ \"./node_modules/dataverse-ify/lib/index.js\");\n/* harmony import */ var dataverse_ify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dataverse_ify__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _dataverse_gen_actions_WinOpportunity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dataverse-gen/actions/WinOpportunity */ \"./src/dataverse-gen/actions/WinOpportunity.ts\");\n/* harmony import */ var _dataverse_gen_entities_OpportunityClose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dataverse-gen/entities/OpportunityClose */ \"./src/dataverse-gen/entities/OpportunityClose.ts\");\n/* harmony import */ var _dataverse_gen_metadata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dataverse-gen/metadata */ \"./src/dataverse-gen/metadata.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\n/* eslint-disable camelcase */\r\n\r\n\r\n\r\n\r\nvar AccountRibbon = /** @class */ (function () {\r\n    function AccountRibbon() {\r\n    }\r\n    AccountRibbon.closeOpporunities2 = function (context) {\r\n        var serviceClient = new dataverse_ify__WEBPACK_IMPORTED_MODULE_0__.XrmContextCdsServiceClient(Xrm.WebApi);\r\n        Promise.resolve(AccountRibbon.closeOpportunitiesInternal(serviceClient, context.data.entity.getId()));\r\n    };\r\n    AccountRibbon.closeOpporunities = function (context) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var serviceClient;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        serviceClient = new dataverse_ify__WEBPACK_IMPORTED_MODULE_0__.XrmContextCdsServiceClient(Xrm.WebApi);\r\n                        return [4 /*yield*/, AccountRibbon.closeOpportunitiesInternal(serviceClient, context.data.entity.getId())];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AccountRibbon.closeOpportunitiesInternal = function (serviceClient, accountid) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var openOps, result, opportunityCount, ex_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        (0,dataverse_ify__WEBPACK_IMPORTED_MODULE_0__.setMetadataCache)(_dataverse_gen_metadata__WEBPACK_IMPORTED_MODULE_3__.metadataCache);\r\n                        return [4 /*yield*/, serviceClient.retrieveMultiple(\"<fetch top=\\\"10\\\" >\\n    <entity name=\\\"opportunity\\\" >\\n      <attribute name=\\\"opportunityid\\\" />\\n      <attribute name=\\\"name\\\" />\\n      <filter>\\n        <condition attribute=\\\"customerid\\\" operator=\\\"eq\\\" value=\\\"\" + accountid + \"\\\" />\\n        <condition attribute=\\\"statecode\\\" operator=\\\"eq\\\" value=\\\"0\\\" />\\n      </filter>\\n    </entity>\\n  </fetch>\")];\r\n                    case 1:\r\n                        openOps = _a.sent();\r\n                        if (!(openOps.entities.length == 0)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, Xrm.Navigation.openAlertDialog({ text: \"There are no open opportunties!\" })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 3: return [4 /*yield*/, Xrm.Navigation.openConfirmDialog({\r\n                            title: \"Close All Open Opportunities?\",\r\n                            text: \"Are you sure you want to close the \" + openOps.entities.length + \" open opportunities?\",\r\n                        })];\r\n                    case 4:\r\n                        result = _a.sent();\r\n                        if (!result.confirmed)\r\n                            return [2 /*return*/];\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 8, , 9]);\r\n                        return [4 /*yield*/, AccountRibbon.closeOpportunities(openOps, serviceClient)];\r\n                    case 6:\r\n                        opportunityCount = _a.sent();\r\n                        Xrm.Utility.closeProgressIndicator();\r\n                        return [4 /*yield*/, Xrm.Navigation.openAlertDialog({ title: \"Success\", text: opportunityCount + \" Opportunities closed\" })];\r\n                    case 7:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 9];\r\n                    case 8:\r\n                        ex_1 = _a.sent();\r\n                        Xrm.Utility.closeProgressIndicator();\r\n                        Xrm.Navigation.openErrorDialog({\r\n                            details: ex_1,\r\n                            message: \"Could not close opportunites:\\n\" + ex_1.message + \"\\n\",\r\n                        });\r\n                        return [3 /*break*/, 9];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AccountRibbon.closeOpportunities = function (openOps, serviceClient) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var opportunityCount, _i, _a, openOpportunity, winRequest;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        opportunityCount = 0;\r\n                        _i = 0, _a = openOps.entities;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        if (!(_i < _a.length)) return [3 /*break*/, 4];\r\n                        openOpportunity = _a[_i];\r\n                        opportunityCount++;\r\n                        Xrm.Utility.showProgressIndicator(\"Closing Opportunity \" + opportunityCount + \" of \" + openOps.entities.length + \" - '\" + openOpportunity.name + \"', Please Wait...\");\r\n                        winRequest = {\r\n                            logicalName: _dataverse_gen_actions_WinOpportunity__WEBPACK_IMPORTED_MODULE_1__.WinOpportunityMetadata.operationName,\r\n                            Status: 3 /* Won */,\r\n                            OpportunityClose: {\r\n                                logicalName: _dataverse_gen_entities_OpportunityClose__WEBPACK_IMPORTED_MODULE_2__.opportunitycloseMetadata.logicalName,\r\n                                subject: \"Opportunity Won\",\r\n                                opportunityid: new dataverse_ify__WEBPACK_IMPORTED_MODULE_0__.EntityReference(openOpportunity.logicalName, openOpportunity.opportunityid),\r\n                            },\r\n                        };\r\n                        return [4 /*yield*/, serviceClient.execute(winRequest)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 4: return [2 /*return*/, opportunityCount];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return AccountRibbon;\r\n}());\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Ribbon/AccountRibbon.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/actions/WinOpportunity.ts":
/*!*****************************************************!*\
  !*** ./src/dataverse-gen/actions/WinOpportunity.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WinOpportunityMetadata\": () => (/* binding */ WinOpportunityMetadata)\n/* harmony export */ });\n/* harmony import */ var dataverse_ify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dataverse-ify */ \"./node_modules/dataverse-ify/lib/index.js\");\n/* harmony import */ var dataverse_ify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dataverse_ify__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n// Action WinOpportunity\r\nvar WinOpportunityMetadata = {\r\n    parameterTypes: {\r\n        \"OpportunityClose\": {\r\n            typeName: \"mscrm.opportunityclose\",\r\n            structuralProperty: dataverse_ify__WEBPACK_IMPORTED_MODULE_0__.StructuralProperty.EntityType\r\n        },\r\n        \"Caller\": {\r\n            typeName: \"Edm.String\",\r\n            structuralProperty: dataverse_ify__WEBPACK_IMPORTED_MODULE_0__.StructuralProperty.PrimitiveType\r\n        },\r\n        \"Status\": {\r\n            typeName: \"Edm.Int32\",\r\n            structuralProperty: dataverse_ify__WEBPACK_IMPORTED_MODULE_0__.StructuralProperty.PrimitiveType\r\n        },\r\n    },\r\n    operationType: dataverse_ify__WEBPACK_IMPORTED_MODULE_0__.OperationType.Action,\r\n    operationName: \"WinOpportunity\"\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9zcmMvZGF0YXZlcnNlLWdlbi9hY3Rpb25zL1dpbk9wcG9ydHVuaXR5LnRzPzlmN2IiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRW1EO0FBQ0w7QUFFOUMsd0JBQXdCO0FBQ2pCLElBQU0sc0JBQXNCLEdBQUc7SUFDcEMsY0FBYyxFQUFFO1FBQ2Qsa0JBQWtCLEVBQUU7WUFDbEIsUUFBUSxFQUFFLHdCQUF3QjtZQUNsQyxrQkFBa0IsRUFBRSx3RUFBNkI7U0FDaEQ7UUFDRCxRQUFRLEVBQUU7WUFDVixRQUFRLEVBQUUsWUFBWTtZQUN0QixrQkFBa0IsRUFBRSwyRUFBZ0M7U0FDbkQ7UUFDRCxRQUFRLEVBQUU7WUFDVixRQUFRLEVBQUUsV0FBVztZQUNyQixrQkFBa0IsRUFBRSwyRUFBZ0M7U0FDbkQ7S0FFSjtJQUNELGFBQWEsRUFBRSwrREFBb0I7SUFDbkMsYUFBYSxFQUFFLGdCQUFnQjtDQUNoQyxDQUFDIiwiZmlsZSI6Ii4vc3JjL2RhdGF2ZXJzZS1nZW4vYWN0aW9ucy9XaW5PcHBvcnR1bml0eS50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlKi9cclxuaW1wb3J0IHsgV2ViQXBpRXhlY3V0ZVJlcXVlc3QgfSBmcm9tIFwiZGF0YXZlcnNlLWlmeVwiO1xyXG5pbXBvcnQgeyBTdHJ1Y3R1cmFsUHJvcGVydHkgfSBmcm9tIFwiZGF0YXZlcnNlLWlmeVwiO1xyXG5pbXBvcnQgeyBPcGVyYXRpb25UeXBlIH0gZnJvbSBcImRhdGF2ZXJzZS1pZnlcIjtcclxuXHJcbi8vIEFjdGlvbiBXaW5PcHBvcnR1bml0eVxyXG5leHBvcnQgY29uc3QgV2luT3Bwb3J0dW5pdHlNZXRhZGF0YSA9IHtcclxuICBwYXJhbWV0ZXJUeXBlczoge1xyXG4gICAgXCJPcHBvcnR1bml0eUNsb3NlXCI6IHtcclxuICAgICAgdHlwZU5hbWU6IFwibXNjcm0ub3Bwb3J0dW5pdHljbG9zZVwiLFxyXG4gICAgICBzdHJ1Y3R1cmFsUHJvcGVydHk6IFN0cnVjdHVyYWxQcm9wZXJ0eS5FbnRpdHlUeXBlXHJcbiAgICAgIH0sXHRcdFxyXG4gICAgICBcIkNhbGxlclwiOiB7XHJcbiAgICAgIHR5cGVOYW1lOiBcIkVkbS5TdHJpbmdcIixcclxuICAgICAgc3RydWN0dXJhbFByb3BlcnR5OiBTdHJ1Y3R1cmFsUHJvcGVydHkuUHJpbWl0aXZlVHlwZVxyXG4gICAgICB9LFx0XHRcclxuICAgICAgXCJTdGF0dXNcIjoge1xyXG4gICAgICB0eXBlTmFtZTogXCJFZG0uSW50MzJcIixcclxuICAgICAgc3RydWN0dXJhbFByb3BlcnR5OiBTdHJ1Y3R1cmFsUHJvcGVydHkuUHJpbWl0aXZlVHlwZVxyXG4gICAgICB9LFx0XHRcclxuICBcclxuICB9LFxyXG4gIG9wZXJhdGlvblR5cGU6IE9wZXJhdGlvblR5cGUuQWN0aW9uLFxyXG4gIG9wZXJhdGlvbk5hbWU6IFwiV2luT3Bwb3J0dW5pdHlcIlxyXG59O1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBXaW5PcHBvcnR1bml0eVJlcXVlc3QgZXh0ZW5kcyBXZWJBcGlFeGVjdXRlUmVxdWVzdCB7XHJcbiAgT3Bwb3J0dW5pdHlDbG9zZT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgaW1wb3J0KFwiLi4vZW50aXRpZXMvT3Bwb3J0dW5pdHlDbG9zZVwiKS5PcHBvcnR1bml0eUNsb3NlO1xyXG4gIENhbGxlcj86IHN0cmluZztcclxuICBTdGF0dXM/OiBudW1iZXI7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/dataverse-gen/actions/WinOpportunity.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/Account.ts":
/*!***********************************************!*\
  !*** ./src/dataverse-gen/entities/Account.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"accountMetadata\": () => (/* binding */ accountMetadata)\n/* harmony export */ });\n// Entity Account\r\nvar accountMetadata = {\r\n    typeName: \"mscrm.account\",\r\n    logicalName: \"account\",\r\n    collectionName: \"accounts\",\r\n    primaryIdAttribute: \"accountid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        address1_latitude: \"Double\",\r\n        address1_longitude: \"Double\",\r\n        address1_utcoffset: \"Integer\",\r\n        address2_latitude: \"Double\",\r\n        address2_longitude: \"Double\",\r\n        address2_utcoffset: \"Integer\",\r\n        aging30: \"Money\",\r\n        aging30_base: \"Money\",\r\n        aging60: \"Money\",\r\n        aging60_base: \"Money\",\r\n        aging90: \"Money\",\r\n        aging90_base: \"Money\",\r\n        creditlimit: \"Money\",\r\n        creditlimit_base: \"Money\",\r\n        entityimage_timestamp: \"BigInt\",\r\n        exchangerate: \"Decimal\",\r\n        importsequencenumber: \"Integer\",\r\n        marketcap: \"Money\",\r\n        marketcap_base: \"Money\",\r\n        msdyn_travelcharge: \"Money\",\r\n        msdyn_travelcharge_base: \"Money\",\r\n        numberofemployees: \"Integer\",\r\n        onholdtime: \"Integer\",\r\n        opendeals: \"Integer\",\r\n        opendeals_state: \"Integer\",\r\n        openrevenue: \"Money\",\r\n        openrevenue_base: \"Money\",\r\n        openrevenue_state: \"Integer\",\r\n        revenue: \"Money\",\r\n        revenue_base: \"Money\",\r\n        sharesoutstanding: \"Integer\",\r\n        teamsfollowed: \"Integer\",\r\n        timezoneruleversionnumber: \"Integer\",\r\n        utcconversiontimezonecode: \"Integer\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        accountcategorycode: \"Optionset\",\r\n        accountclassificationcode: \"Optionset\",\r\n        accountratingcode: \"Optionset\",\r\n        address1_addresstypecode: \"Optionset\",\r\n        address1_freighttermscode: \"Optionset\",\r\n        address1_shippingmethodcode: \"Optionset\",\r\n        address2_addresstypecode: \"Optionset\",\r\n        address2_freighttermscode: \"Optionset\",\r\n        address2_shippingmethodcode: \"Optionset\",\r\n        businesstypecode: \"Optionset\",\r\n        customersizecode: \"Optionset\",\r\n        customertypecode: \"Optionset\",\r\n        industrycode: \"Optionset\",\r\n        msdyn_travelchargetype: \"Optionset\",\r\n        ownershipcode: \"Optionset\",\r\n        paymenttermscode: \"Optionset\",\r\n        preferredappointmentdaycode: \"Optionset\",\r\n        preferredappointmenttimecode: \"Optionset\",\r\n        preferredcontactmethodcode: \"Optionset\",\r\n        shippingmethodcode: \"Optionset\",\r\n        statecode: \"Optionset\",\r\n        statuscode: \"Optionset\",\r\n        territorycode: \"Optionset\",\r\n        // Date Formats\r\n        createdon: \"DateAndTime:UserLocal\",\r\n        lastonholdtime: \"DateAndTime:UserLocal\",\r\n        lastusedincampaign: \"DateOnly:UserLocal\",\r\n        modifiedon: \"DateAndTime:UserLocal\",\r\n        opendeals_date: \"DateAndTime:UserLocal\",\r\n        openrevenue_date: \"DateAndTime:UserLocal\",\r\n        overriddencreatedon: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        transactioncurrencyid: [\"mscrm.transactioncurrency\"],\r\n        territoryid: [\"mscrm.territory\"],\r\n        stageid_processstage: [\"mscrm.processstage\"],\r\n        sla_account_sla: [\"mscrm.sla\"],\r\n        primarycontactid: [\"mscrm.contact\"],\r\n        preferredsystemuserid: [\"mscrm.systemuser\"],\r\n        preferredserviceid: [\"mscrm.service\"],\r\n        preferredequipmentid: [\"mscrm.equipment\"],\r\n        parentaccountid: [\"mscrm.account\"],\r\n        owninguser: [\"mscrm.systemuser\"],\r\n        owningteam: [\"mscrm.team\"],\r\n        owningbusinessunit: [\"mscrm.businessunit\"],\r\n        ownerid: [\"mscrm.principal\"],\r\n        originatingleadid: [\"mscrm.lead\"],\r\n        msdyn_workhourtemplate: [\"mscrm.msdyn_workhourtemplate\"],\r\n        msdyn_serviceterritory: [\"mscrm.territory\"],\r\n        msdyn_salestaxcode: [\"mscrm.msdyn_taxcode\"],\r\n        msdyn_PreferredResource: [\"mscrm.bookableresource\"],\r\n        modifiedonbehalfby: [\"mscrm.systemuser\"],\r\n        modifiedby: [\"mscrm.systemuser\"],\r\n        masterid: [\"mscrm.account\"],\r\n        defaultpricelevelid: [\"mscrm.pricelevel\"],\r\n        createdonbehalfby: [\"mscrm.systemuser\"],\r\n        createdby: [\"mscrm.systemuser\"],\r\n        msdyn_billingaccount: [\"account\"],\r\n        slainvokedid: [\"sla\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/Account.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/ActivityParty.ts":
/*!*****************************************************!*\
  !*** ./src/dataverse-gen/entities/ActivityParty.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"activitypartyMetadata\": () => (/* binding */ activitypartyMetadata)\n/* harmony export */ });\n// Entity ActivityParty\r\nvar activitypartyMetadata = {\r\n    typeName: \"mscrm.activityparty\",\r\n    logicalName: \"activityparty\",\r\n    collectionName: \"activityparties\",\r\n    primaryIdAttribute: \"activitypartyid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        addressusedemailcolumnnumber: \"Integer\",\r\n        effort: \"Double\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        instancetypecode: \"Optionset\",\r\n        participationtypemask: \"Optionset\",\r\n        // Date Formats\r\n        scheduledend: \"DateOnly:UserLocal\",\r\n        scheduledstart: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        resourcespecid: [\"mscrm.resourcespec\"],\r\n        activityid: [\"activitypointer\"],\r\n        partyid: [\"account\", \"bulkoperation\", \"campaign\", \"campaignactivity\", \"contact\", \"contract\", \"entitlement\", \"equipment\", \"incident\", \"invoice\", \"knowledgearticle\", \"lead\", \"opportunity\", \"queue\", \"quote\", \"salesorder\", \"systemuser\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/ActivityParty.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/Email.ts":
/*!*********************************************!*\
  !*** ./src/dataverse-gen/entities/Email.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"emailMetadata\": () => (/* binding */ emailMetadata)\n/* harmony export */ });\n// Entity Email\r\nvar emailMetadata = {\r\n    typeName: \"mscrm.email\",\r\n    logicalName: \"email\",\r\n    collectionName: \"emails\",\r\n    primaryIdAttribute: \"activityid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        actualdurationminutes: \"Integer\",\r\n        attachmentcount: \"Integer\",\r\n        attachmentopencount: \"Integer\",\r\n        baseconversationindexhash: \"Integer\",\r\n        deliveryattempts: \"Integer\",\r\n        exchangerate: \"Decimal\",\r\n        importsequencenumber: \"Integer\",\r\n        isunsafe: \"Integer\",\r\n        linksclickedcount: \"Integer\",\r\n        onholdtime: \"Integer\",\r\n        opencount: \"Integer\",\r\n        replycount: \"Integer\",\r\n        scheduleddurationminutes: \"Integer\",\r\n        timezoneruleversionnumber: \"Integer\",\r\n        utcconversiontimezonecode: \"Integer\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        correlationmethod: \"Optionset\",\r\n        deliveryprioritycode: \"Optionset\",\r\n        emailreminderstatus: \"Optionset\",\r\n        emailremindertype: \"Optionset\",\r\n        notifications: \"Optionset\",\r\n        prioritycode: \"Optionset\",\r\n        statecode: \"Optionset\",\r\n        statuscode: \"Optionset\",\r\n        // Date Formats\r\n        actualend: \"DateOnly:UserLocal\",\r\n        actualstart: \"DateOnly:UserLocal\",\r\n        createdon: \"DateAndTime:UserLocal\",\r\n        delayedemailsendtime: \"DateAndTime:UserLocal\",\r\n        emailreminderexpirytime: \"DateAndTime:UserLocal\",\r\n        lastonholdtime: \"DateAndTime:UserLocal\",\r\n        lastopenedtime: \"DateAndTime:UserLocal\",\r\n        modifiedon: \"DateAndTime:UserLocal\",\r\n        overriddencreatedon: \"DateOnly:UserLocal\",\r\n        postponeemailprocessinguntil: \"DateAndTime:UserLocal\",\r\n        scheduledend: \"DateAndTime:UserLocal\",\r\n        scheduledstart: \"DateAndTime:UserLocal\",\r\n        senton: \"DateAndTime:UserLocal\",\r\n        sortdate: \"DateAndTime:UserLocal\",\r\n    },\r\n    navigation: {\r\n        templateid: [\"mscrm.template\"],\r\n        stageid_processstage: [\"mscrm.processstage\"],\r\n        sla_email_sla: [\"mscrm.sla\"],\r\n        sendersaccount: [\"mscrm.account\"],\r\n        parentactivityid: [\"mscrm.email\"],\r\n        ownerid_email: [\"mscrm.principal\"],\r\n        activityid_activitypointer: [\"mscrm.activitypointer\"],\r\n        acceptingentityid: [\"mscrm.queue\"],\r\n        ReceivingMailboxId_Email: [\"mscrm.mailbox\"],\r\n        CorrelatedActivityId_Email: [\"mscrm.email\"],\r\n        createdby: [\"systemuser\"],\r\n        createdonbehalfby: [\"systemuser\"],\r\n        emailsender: [\"account\", \"contact\", \"equipment\", \"lead\", \"queue\", \"systemuser\"],\r\n        modifiedby: [\"systemuser\"],\r\n        modifiedonbehalfby: [\"systemuser\"],\r\n        owningbusinessunit: [\"businessunit\"],\r\n        owningteam: [\"team\"],\r\n        owninguser: [\"systemuser\"],\r\n        regardingobjectid: [\"account\", \"asyncoperation\", \"bookableresourcebooking\", \"bookableresourcebookingheader\", \"bulkoperation\", \"campaign\", \"campaignactivity\", \"contact\", \"contract\", \"entitlement\", \"entitlementtemplate\", \"incident\", \"invoice\", \"knowledgearticle\", \"knowledgebaserecord\", \"lead\", \"msdyn_agreement\", \"msdyn_agreementbookingdate\", \"msdyn_agreementbookingincident\", \"msdyn_agreementbookingproduct\", \"msdyn_agreementbookingservice\", \"msdyn_agreementbookingservicetask\", \"msdyn_agreementbookingsetup\", \"msdyn_agreementinvoicedate\", \"msdyn_agreementinvoiceproduct\", \"msdyn_agreementinvoicesetup\", \"msdyn_bookingalertstatus\", \"msdyn_bookingrule\", \"msdyn_bookingtimestamp\", \"msdyn_customerasset\", \"msdyn_fieldservicesetting\", \"msdyn_incidenttypecharacteristic\", \"msdyn_incidenttypeproduct\", \"msdyn_incidenttypeservice\", \"msdyn_inventoryadjustment\", \"msdyn_inventoryadjustmentproduct\", \"msdyn_inventoryjournal\", \"msdyn_inventorytransfer\", \"msdyn_payment\", \"msdyn_paymentdetail\", \"msdyn_paymentmethod\", \"msdyn_paymentterm\", \"msdyn_playbookinstance\", \"msdyn_postalbum\", \"msdyn_postalcode\", \"msdyn_processnotes\", \"msdyn_productinventory\", \"msdyn_projectteam\", \"msdyn_purchaseorder\", \"msdyn_purchaseorderbill\", \"msdyn_purchaseorderproduct\", \"msdyn_purchaseorderreceipt\", \"msdyn_purchaseorderreceiptproduct\", \"msdyn_purchaseordersubstatus\", \"msdyn_quotebookingincident\", \"msdyn_quotebookingproduct\", \"msdyn_quotebookingservice\", \"msdyn_quotebookingservicetask\", \"msdyn_resourceterritory\", \"msdyn_rma\", \"msdyn_rmaproduct\", \"msdyn_rmareceipt\", \"msdyn_rmareceiptproduct\", \"msdyn_rmasubstatus\", \"msdyn_rtv\", \"msdyn_rtvproduct\", \"msdyn_rtvsubstatus\", \"msdyn_shipvia\", \"msdyn_systemuserschedulersetting\", \"msdyn_timegroup\", \"msdyn_timegroupdetail\", \"msdyn_timeoffrequest\", \"msdyn_warehouse\", \"msdyn_workorder\", \"msdyn_workordercharacteristic\", \"msdyn_workorderincident\", \"msdyn_workorderproduct\", \"msdyn_workorderresourcerestriction\", \"msdyn_workorderservice\", \"msdyn_workorderservicetask\", \"opportunity\", \"quote\", \"salesorder\", \"site\"],\r\n        sendermailboxid: [\"mailbox\"],\r\n        serviceid: [\"service\"],\r\n        slainvokedid: [\"sla\"],\r\n        transactioncurrencyid: [\"transactioncurrency\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/Email.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/Opportunity.ts":
/*!***************************************************!*\
  !*** ./src/dataverse-gen/entities/Opportunity.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"opportunityMetadata\": () => (/* binding */ opportunityMetadata)\n/* harmony export */ });\n// Entity Opportunity\r\nvar opportunityMetadata = {\r\n    typeName: \"mscrm.opportunity\",\r\n    logicalName: \"opportunity\",\r\n    collectionName: \"opportunities\",\r\n    primaryIdAttribute: \"opportunityid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        actualvalue: \"Money\",\r\n        actualvalue_base: \"Money\",\r\n        budgetamount: \"Money\",\r\n        budgetamount_base: \"Money\",\r\n        closeprobability: \"Integer\",\r\n        discountamount: \"Money\",\r\n        discountamount_base: \"Money\",\r\n        discountpercentage: \"Decimal\",\r\n        estimatedvalue: \"Money\",\r\n        estimatedvalue_base: \"Money\",\r\n        exchangerate: \"Decimal\",\r\n        freightamount: \"Money\",\r\n        freightamount_base: \"Money\",\r\n        importsequencenumber: \"Integer\",\r\n        int_forecast: \"Money\",\r\n        int_forecast_base: \"Money\",\r\n        onholdtime: \"Integer\",\r\n        teamsfollowed: \"Integer\",\r\n        timezoneruleversionnumber: \"Integer\",\r\n        totalamount: \"Money\",\r\n        totalamount_base: \"Money\",\r\n        totalamountlessfreight: \"Money\",\r\n        totalamountlessfreight_base: \"Money\",\r\n        totaldiscountamount: \"Money\",\r\n        totaldiscountamount_base: \"Money\",\r\n        totallineitemamount: \"Money\",\r\n        totallineitemamount_base: \"Money\",\r\n        totallineitemdiscountamount: \"Money\",\r\n        totallineitemdiscountamount_base: \"Money\",\r\n        totaltax: \"Money\",\r\n        totaltax_base: \"Money\",\r\n        utcconversiontimezonecode: \"Integer\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        budgetstatus: \"Optionset\",\r\n        initialcommunication: \"Optionset\",\r\n        msdyn_forecastcategory: \"Optionset\",\r\n        msdyn_ordertype: \"Optionset\",\r\n        need: \"Optionset\",\r\n        opportunityratingcode: \"Optionset\",\r\n        pricingerrorcode: \"Optionset\",\r\n        prioritycode: \"Optionset\",\r\n        purchaseprocess: \"Optionset\",\r\n        purchasetimeframe: \"Optionset\",\r\n        salesstage: \"Optionset\",\r\n        salesstagecode: \"Optionset\",\r\n        skippricecalculation: \"Optionset\",\r\n        statecode: \"Optionset\",\r\n        statuscode: \"Optionset\",\r\n        timeline: \"Optionset\",\r\n        // Date Formats\r\n        actualclosedate: \"DateOnly:DateOnly\",\r\n        createdon: \"DateAndTime:UserLocal\",\r\n        estimatedclosedate: \"DateOnly:DateOnly\",\r\n        finaldecisiondate: \"DateOnly:DateOnly\",\r\n        lastonholdtime: \"DateAndTime:UserLocal\",\r\n        modifiedon: \"DateAndTime:UserLocal\",\r\n        overriddencreatedon: \"DateOnly:UserLocal\",\r\n        schedulefollowup_prospect: \"DateOnly:UserLocal\",\r\n        schedulefollowup_qualify: \"DateOnly:UserLocal\",\r\n        scheduleproposalmeeting: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        transactioncurrencyid: [\"mscrm.transactioncurrency\"],\r\n        stageid_processstage: [\"mscrm.processstage\"],\r\n        sla_opportunity_sla: [\"mscrm.sla\"],\r\n        pricelevelid: [\"mscrm.pricelevel\"],\r\n        parentcontactid: [\"mscrm.contact\"],\r\n        parentaccountid: [\"mscrm.account\"],\r\n        owninguser: [\"mscrm.systemuser\"],\r\n        owningteam: [\"mscrm.team\"],\r\n        owningbusinessunit: [\"mscrm.businessunit\"],\r\n        ownerid: [\"mscrm.principal\"],\r\n        originatingleadid: [\"mscrm.lead\"],\r\n        msdyn_workordertype: [\"mscrm.msdyn_workordertype\"],\r\n        msdyn_ContractOrganizationalUnitId: [\"mscrm.msdyn_organizationalunit\"],\r\n        msdyn_AccountManagerId: [\"mscrm.systemuser\"],\r\n        modifiedonbehalfby: [\"mscrm.systemuser\"],\r\n        modifiedby: [\"mscrm.systemuser\"],\r\n        createdonbehalfby: [\"mscrm.systemuser\"],\r\n        createdby: [\"mscrm.systemuser\"],\r\n        campaignid: [\"mscrm.campaign\"],\r\n        customerid: [\"account\", \"contact\"],\r\n        slainvokedid: [\"sla\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/Opportunity.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/OpportunityClose.ts":
/*!********************************************************!*\
  !*** ./src/dataverse-gen/entities/OpportunityClose.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"opportunitycloseMetadata\": () => (/* binding */ opportunitycloseMetadata)\n/* harmony export */ });\n// Entity OpportunityClose\r\nvar opportunitycloseMetadata = {\r\n    typeName: \"mscrm.opportunityclose\",\r\n    logicalName: \"opportunityclose\",\r\n    collectionName: \"opportunitycloses\",\r\n    primaryIdAttribute: \"activityid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        actualdurationminutes: \"Integer\",\r\n        actualrevenue: \"Money\",\r\n        actualrevenue_base: \"Money\",\r\n        exchangerate: \"Decimal\",\r\n        importsequencenumber: \"Integer\",\r\n        onholdtime: \"Integer\",\r\n        scheduleddurationminutes: \"Integer\",\r\n        timezoneruleversionnumber: \"Integer\",\r\n        utcconversiontimezonecode: \"Integer\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        community: \"Optionset\",\r\n        deliveryprioritycode: \"Optionset\",\r\n        instancetypecode: \"Optionset\",\r\n        opportunitystatecode: \"Optionset\",\r\n        opportunitystatuscode: \"Optionset\",\r\n        prioritycode: \"Optionset\",\r\n        statecode: \"Optionset\",\r\n        statuscode: \"Optionset\",\r\n        // Date Formats\r\n        actualend: \"DateOnly:UserLocal\",\r\n        actualstart: \"DateOnly:UserLocal\",\r\n        createdon: \"DateAndTime:UserLocal\",\r\n        deliverylastattemptedon: \"DateAndTime:UserLocal\",\r\n        lastonholdtime: \"DateAndTime:UserLocal\",\r\n        modifiedon: \"DateAndTime:UserLocal\",\r\n        overriddencreatedon: \"DateOnly:UserLocal\",\r\n        postponeactivityprocessinguntil: \"DateAndTime:UserLocal\",\r\n        scheduledend: \"DateOnly:UserLocal\",\r\n        scheduledstart: \"DateOnly:UserLocal\",\r\n        senton: \"DateAndTime:UserLocal\",\r\n        sortdate: \"DateAndTime:UserLocal\",\r\n    },\r\n    navigation: {\r\n        sla_activitypointer_sla_opportunityclose: [\"mscrm.sla\"],\r\n        ownerid_opportunityclose: [\"mscrm.principal\"],\r\n        opportunityid: [\"mscrm.opportunity\"],\r\n        competitorid: [\"mscrm.competitor\"],\r\n        activityid_activitypointer: [\"mscrm.activitypointer\"],\r\n        createdby: [\"systemuser\"],\r\n        createdonbehalfby: [\"systemuser\"],\r\n        modifiedby: [\"systemuser\"],\r\n        modifiedonbehalfby: [\"systemuser\"],\r\n        owningbusinessunit: [\"businessunit\"],\r\n        owningteam: [\"team\"],\r\n        owninguser: [\"systemuser\"],\r\n        regardingobjectid: [\"account\", \"bookableresourcebooking\", \"bookableresourcebookingheader\", \"bulkoperation\", \"campaign\", \"campaignactivity\", \"entitlement\", \"entitlementtemplate\", \"incident\", \"interactionforemail\", \"knowledgearticle\", \"knowledgebaserecord\", \"lead\", \"msdyn_customerasset\", \"msdyn_playbookinstance\", \"opportunity\", \"site\"],\r\n        sendermailboxid: [\"mailbox\"],\r\n        serviceid: [\"service\"],\r\n        slainvokedid: [\"sla\"],\r\n        transactioncurrencyid: [\"transactioncurrency\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9zcmMvZGF0YXZlcnNlLWdlbi9lbnRpdGllcy9PcHBvcnR1bml0eUNsb3NlLnRzPzc0NzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLDBCQUEwQjtBQUNuQixJQUFNLHdCQUF3QixHQUFHO0lBQ3RDLFFBQVEsRUFBRSx3QkFBd0I7SUFDbEMsV0FBVyxFQUFFLGtCQUFrQjtJQUMvQixjQUFjLEVBQUUsbUJBQW1CO0lBQ25DLGtCQUFrQixFQUFFLFlBQVk7SUFDaEMsY0FBYyxFQUFFO1FBQ2QsZ0JBQWdCO1FBQ2hCLHFCQUFxQixFQUFFLFNBQVM7UUFDaEMsYUFBYSxFQUFFLE9BQU87UUFDdEIsa0JBQWtCLEVBQUUsT0FBTztRQUMzQixZQUFZLEVBQUUsU0FBUztRQUN2QixvQkFBb0IsRUFBRSxTQUFTO1FBQy9CLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLHdCQUF3QixFQUFFLFNBQVM7UUFDbkMseUJBQXlCLEVBQUUsU0FBUztRQUNwQyx5QkFBeUIsRUFBRSxTQUFTO1FBQ3BDLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLGFBQWE7UUFDYixTQUFTLEVBQUUsV0FBVztRQUN0QixvQkFBb0IsRUFBRSxXQUFXO1FBQ2pDLGdCQUFnQixFQUFFLFdBQVc7UUFDN0Isb0JBQW9CLEVBQUUsV0FBVztRQUNqQyxxQkFBcUIsRUFBRSxXQUFXO1FBQ2xDLFlBQVksRUFBRSxXQUFXO1FBQ3pCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLFVBQVUsRUFBRSxXQUFXO1FBQ3ZCLGVBQWU7UUFDZixTQUFTLEVBQUUsb0JBQW9CO1FBQy9CLFdBQVcsRUFBRSxvQkFBb0I7UUFDakMsU0FBUyxFQUFFLHVCQUF1QjtRQUNsQyx1QkFBdUIsRUFBRSx1QkFBdUI7UUFDaEQsY0FBYyxFQUFFLHVCQUF1QjtRQUN2QyxVQUFVLEVBQUUsdUJBQXVCO1FBQ25DLG1CQUFtQixFQUFFLG9CQUFvQjtRQUN6QywrQkFBK0IsRUFBRSx1QkFBdUI7UUFDeEQsWUFBWSxFQUFFLG9CQUFvQjtRQUNsQyxjQUFjLEVBQUUsb0JBQW9CO1FBQ3BDLE1BQU0sRUFBRSx1QkFBdUI7UUFDL0IsUUFBUSxFQUFFLHVCQUF1QjtLQUNsQztJQUNELFVBQVUsRUFBRTtRQUNWLHdDQUF3QyxFQUFFLENBQUMsV0FBVyxDQUFDO1FBQ3ZELHdCQUF3QixFQUFFLENBQUMsaUJBQWlCLENBQUM7UUFDN0MsYUFBYSxFQUFFLENBQUMsbUJBQW1CLENBQUM7UUFDcEMsWUFBWSxFQUFFLENBQUMsa0JBQWtCLENBQUM7UUFDbEMsMEJBQTBCLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQztRQUNyRCxTQUFTLEVBQUUsQ0FBQyxZQUFZLENBQUM7UUFDekIsaUJBQWlCLEVBQUUsQ0FBQyxZQUFZLENBQUM7UUFDakMsVUFBVSxFQUFFLENBQUMsWUFBWSxDQUFDO1FBQzFCLGtCQUFrQixFQUFFLENBQUMsWUFBWSxDQUFDO1FBQ2xDLGtCQUFrQixFQUFFLENBQUMsY0FBYyxDQUFDO1FBQ3BDLFVBQVUsRUFBRSxDQUFDLE1BQU0sQ0FBQztRQUNwQixVQUFVLEVBQUUsQ0FBQyxZQUFZLENBQUM7UUFDMUIsaUJBQWlCLEVBQUUsQ0FBQyxTQUFTLEVBQUMseUJBQXlCLEVBQUMsK0JBQStCLEVBQUMsZUFBZSxFQUFDLFVBQVUsRUFBQyxrQkFBa0IsRUFBQyxhQUFhLEVBQUMscUJBQXFCLEVBQUMsVUFBVSxFQUFDLHFCQUFxQixFQUFDLGtCQUFrQixFQUFDLHFCQUFxQixFQUFDLE1BQU0sRUFBQyxxQkFBcUIsRUFBQyx3QkFBd0IsRUFBQyxhQUFhLEVBQUMsTUFBTSxDQUFDO1FBQy9ULGVBQWUsRUFBRSxDQUFDLFNBQVMsQ0FBQztRQUM1QixTQUFTLEVBQUUsQ0FBQyxTQUFTLENBQUM7UUFDdEIsWUFBWSxFQUFFLENBQUMsS0FBSyxDQUFDO1FBQ3JCLHFCQUFxQixFQUFFLENBQUMscUJBQXFCLENBQUM7S0FDL0M7Q0FDRixDQUFDIiwiZmlsZSI6Ii4vc3JjL2RhdGF2ZXJzZS1nZW4vZW50aXRpZXMvT3Bwb3J0dW5pdHlDbG9zZS50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlKi9cclxuaW1wb3J0IHsgSUVudGl0eSB9IGZyb20gXCJkYXRhdmVyc2UtaWZ5XCI7XHJcbi8vIEVudGl0eSBPcHBvcnR1bml0eUNsb3NlXHJcbmV4cG9ydCBjb25zdCBvcHBvcnR1bml0eWNsb3NlTWV0YWRhdGEgPSB7XHJcbiAgdHlwZU5hbWU6IFwibXNjcm0ub3Bwb3J0dW5pdHljbG9zZVwiLFxyXG4gIGxvZ2ljYWxOYW1lOiBcIm9wcG9ydHVuaXR5Y2xvc2VcIixcclxuICBjb2xsZWN0aW9uTmFtZTogXCJvcHBvcnR1bml0eWNsb3Nlc1wiLFxyXG4gIHByaW1hcnlJZEF0dHJpYnV0ZTogXCJhY3Rpdml0eWlkXCIsXHJcbiAgYXR0cmlidXRlVHlwZXM6IHtcclxuICAgIC8vIE51bWVyaWMgVHlwZXNcclxuICAgIGFjdHVhbGR1cmF0aW9ubWludXRlczogXCJJbnRlZ2VyXCIsXHJcbiAgICBhY3R1YWxyZXZlbnVlOiBcIk1vbmV5XCIsXHJcbiAgICBhY3R1YWxyZXZlbnVlX2Jhc2U6IFwiTW9uZXlcIixcclxuICAgIGV4Y2hhbmdlcmF0ZTogXCJEZWNpbWFsXCIsXHJcbiAgICBpbXBvcnRzZXF1ZW5jZW51bWJlcjogXCJJbnRlZ2VyXCIsXHJcbiAgICBvbmhvbGR0aW1lOiBcIkludGVnZXJcIixcclxuICAgIHNjaGVkdWxlZGR1cmF0aW9ubWludXRlczogXCJJbnRlZ2VyXCIsXHJcbiAgICB0aW1lem9uZXJ1bGV2ZXJzaW9ubnVtYmVyOiBcIkludGVnZXJcIixcclxuICAgIHV0Y2NvbnZlcnNpb250aW1lem9uZWNvZGU6IFwiSW50ZWdlclwiLFxyXG4gICAgdmVyc2lvbm51bWJlcjogXCJCaWdJbnRcIixcclxuICAgIC8vIE9wdGlvbnNldHNcclxuICAgIGNvbW11bml0eTogXCJPcHRpb25zZXRcIixcclxuICAgIGRlbGl2ZXJ5cHJpb3JpdHljb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgaW5zdGFuY2V0eXBlY29kZTogXCJPcHRpb25zZXRcIixcclxuICAgIG9wcG9ydHVuaXR5c3RhdGVjb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgb3Bwb3J0dW5pdHlzdGF0dXNjb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgcHJpb3JpdHljb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgc3RhdGVjb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgc3RhdHVzY29kZTogXCJPcHRpb25zZXRcIixcclxuICAgIC8vIERhdGUgRm9ybWF0c1xyXG4gICAgYWN0dWFsZW5kOiBcIkRhdGVPbmx5OlVzZXJMb2NhbFwiLFxyXG4gICAgYWN0dWFsc3RhcnQ6IFwiRGF0ZU9ubHk6VXNlckxvY2FsXCIsXHJcbiAgICBjcmVhdGVkb246IFwiRGF0ZUFuZFRpbWU6VXNlckxvY2FsXCIsXHJcbiAgICBkZWxpdmVyeWxhc3RhdHRlbXB0ZWRvbjogXCJEYXRlQW5kVGltZTpVc2VyTG9jYWxcIixcclxuICAgIGxhc3RvbmhvbGR0aW1lOiBcIkRhdGVBbmRUaW1lOlVzZXJMb2NhbFwiLFxyXG4gICAgbW9kaWZpZWRvbjogXCJEYXRlQW5kVGltZTpVc2VyTG9jYWxcIixcclxuICAgIG92ZXJyaWRkZW5jcmVhdGVkb246IFwiRGF0ZU9ubHk6VXNlckxvY2FsXCIsXHJcbiAgICBwb3N0cG9uZWFjdGl2aXR5cHJvY2Vzc2luZ3VudGlsOiBcIkRhdGVBbmRUaW1lOlVzZXJMb2NhbFwiLFxyXG4gICAgc2NoZWR1bGVkZW5kOiBcIkRhdGVPbmx5OlVzZXJMb2NhbFwiLFxyXG4gICAgc2NoZWR1bGVkc3RhcnQ6IFwiRGF0ZU9ubHk6VXNlckxvY2FsXCIsXHJcbiAgICBzZW50b246IFwiRGF0ZUFuZFRpbWU6VXNlckxvY2FsXCIsXHJcbiAgICBzb3J0ZGF0ZTogXCJEYXRlQW5kVGltZTpVc2VyTG9jYWxcIixcclxuICB9LFxyXG4gIG5hdmlnYXRpb246IHtcclxuICAgIHNsYV9hY3Rpdml0eXBvaW50ZXJfc2xhX29wcG9ydHVuaXR5Y2xvc2U6IFtcIm1zY3JtLnNsYVwiXSxcclxuICAgIG93bmVyaWRfb3Bwb3J0dW5pdHljbG9zZTogW1wibXNjcm0ucHJpbmNpcGFsXCJdLFxyXG4gICAgb3Bwb3J0dW5pdHlpZDogW1wibXNjcm0ub3Bwb3J0dW5pdHlcIl0sXHJcbiAgICBjb21wZXRpdG9yaWQ6IFtcIm1zY3JtLmNvbXBldGl0b3JcIl0sXHJcbiAgICBhY3Rpdml0eWlkX2FjdGl2aXR5cG9pbnRlcjogW1wibXNjcm0uYWN0aXZpdHlwb2ludGVyXCJdLFxyXG4gICAgY3JlYXRlZGJ5OiBbXCJzeXN0ZW11c2VyXCJdLFxyXG4gICAgY3JlYXRlZG9uYmVoYWxmYnk6IFtcInN5c3RlbXVzZXJcIl0sXHJcbiAgICBtb2RpZmllZGJ5OiBbXCJzeXN0ZW11c2VyXCJdLFxyXG4gICAgbW9kaWZpZWRvbmJlaGFsZmJ5OiBbXCJzeXN0ZW11c2VyXCJdLFxyXG4gICAgb3duaW5nYnVzaW5lc3N1bml0OiBbXCJidXNpbmVzc3VuaXRcIl0sXHJcbiAgICBvd25pbmd0ZWFtOiBbXCJ0ZWFtXCJdLFxyXG4gICAgb3duaW5ndXNlcjogW1wic3lzdGVtdXNlclwiXSxcclxuICAgIHJlZ2FyZGluZ29iamVjdGlkOiBbXCJhY2NvdW50XCIsXCJib29rYWJsZXJlc291cmNlYm9va2luZ1wiLFwiYm9va2FibGVyZXNvdXJjZWJvb2tpbmdoZWFkZXJcIixcImJ1bGtvcGVyYXRpb25cIixcImNhbXBhaWduXCIsXCJjYW1wYWlnbmFjdGl2aXR5XCIsXCJlbnRpdGxlbWVudFwiLFwiZW50aXRsZW1lbnR0ZW1wbGF0ZVwiLFwiaW5jaWRlbnRcIixcImludGVyYWN0aW9uZm9yZW1haWxcIixcImtub3dsZWRnZWFydGljbGVcIixcImtub3dsZWRnZWJhc2VyZWNvcmRcIixcImxlYWRcIixcIm1zZHluX2N1c3RvbWVyYXNzZXRcIixcIm1zZHluX3BsYXlib29raW5zdGFuY2VcIixcIm9wcG9ydHVuaXR5XCIsXCJzaXRlXCJdLFxyXG4gICAgc2VuZGVybWFpbGJveGlkOiBbXCJtYWlsYm94XCJdLFxyXG4gICAgc2VydmljZWlkOiBbXCJzZXJ2aWNlXCJdLFxyXG4gICAgc2xhaW52b2tlZGlkOiBbXCJzbGFcIl0sXHJcbiAgICB0cmFuc2FjdGlvbmN1cnJlbmN5aWQ6IFtcInRyYW5zYWN0aW9uY3VycmVuY3lcIl0sXHJcbiAgfSxcclxufTtcclxuXHJcbi8vIEF0dHJpYnV0ZSBjb25zdGFudHNcclxuZXhwb3J0IGNvbnN0IGVudW0gT3Bwb3J0dW5pdHlDbG9zZUF0dHJpYnV0ZXMge1xyXG4gIEFjdGl2aXR5QWRkaXRpb25hbFBhcmFtcyA9IFwiYWN0aXZpdHlhZGRpdGlvbmFscGFyYW1zXCIsXHJcbiAgQWN0aXZpdHlJZCA9IFwiYWN0aXZpdHlpZFwiLFxyXG4gIEFjdGl2aXR5VHlwZUNvZGUgPSBcImFjdGl2aXR5dHlwZWNvZGVcIixcclxuICBBY3R1YWxEdXJhdGlvbk1pbnV0ZXMgPSBcImFjdHVhbGR1cmF0aW9ubWludXRlc1wiLFxyXG4gIEFjdHVhbEVuZCA9IFwiYWN0dWFsZW5kXCIsXHJcbiAgQWN0dWFsUmV2ZW51ZSA9IFwiYWN0dWFscmV2ZW51ZVwiLFxyXG4gIEFjdHVhbFJldmVudWVfQmFzZSA9IFwiYWN0dWFscmV2ZW51ZV9iYXNlXCIsXHJcbiAgQWN0dWFsU3RhcnQgPSBcImFjdHVhbHN0YXJ0XCIsXHJcbiAgQkNDID0gXCJiY2NcIixcclxuICBDYXRlZ29yeSA9IFwiY2F0ZWdvcnlcIixcclxuICBDQyA9IFwiY2NcIixcclxuICBDb21tdW5pdHkgPSBcImNvbW11bml0eVwiLFxyXG4gIENvbXBldGl0b3JJZCA9IFwiY29tcGV0aXRvcmlkXCIsXHJcbiAgQ29tcGV0aXRvcklkTmFtZSA9IFwiY29tcGV0aXRvcmlkbmFtZVwiLFxyXG4gIENvbXBldGl0b3JJZFlvbWlOYW1lID0gXCJjb21wZXRpdG9yaWR5b21pbmFtZVwiLFxyXG4gIENyZWF0ZWRCeSA9IFwiY3JlYXRlZGJ5XCIsXHJcbiAgQ3JlYXRlZEJ5RXh0ZXJuYWxQYXJ0eSA9IFwiY3JlYXRlZGJ5ZXh0ZXJuYWxwYXJ0eVwiLFxyXG4gIENyZWF0ZWRCeUV4dGVybmFsUGFydHlOYW1lID0gXCJjcmVhdGVkYnlleHRlcm5hbHBhcnR5bmFtZVwiLFxyXG4gIENyZWF0ZWRCeUV4dGVybmFsUGFydHlZb21pTmFtZSA9IFwiY3JlYXRlZGJ5ZXh0ZXJuYWxwYXJ0eXlvbWluYW1lXCIsXHJcbiAgQ3JlYXRlZEJ5TmFtZSA9IFwiY3JlYXRlZGJ5bmFtZVwiLFxyXG4gIENyZWF0ZWRCeVlvbWlOYW1lID0gXCJjcmVhdGVkYnl5b21pbmFtZVwiLFxyXG4gIENyZWF0ZWRPbiA9IFwiY3JlYXRlZG9uXCIsXHJcbiAgQ3JlYXRlZE9uQmVoYWxmQnkgPSBcImNyZWF0ZWRvbmJlaGFsZmJ5XCIsXHJcbiAgQ3JlYXRlZE9uQmVoYWxmQnlOYW1lID0gXCJjcmVhdGVkb25iZWhhbGZieW5hbWVcIixcclxuICBDcmVhdGVkT25CZWhhbGZCeVlvbWlOYW1lID0gXCJjcmVhdGVkb25iZWhhbGZieXlvbWluYW1lXCIsXHJcbiAgQ3VzdG9tZXJzID0gXCJjdXN0b21lcnNcIixcclxuICBEZWxpdmVyeUxhc3RBdHRlbXB0ZWRPbiA9IFwiZGVsaXZlcnlsYXN0YXR0ZW1wdGVkb25cIixcclxuICBEZWxpdmVyeVByaW9yaXR5Q29kZSA9IFwiZGVsaXZlcnlwcmlvcml0eWNvZGVcIixcclxuICBEZXNjcmlwdGlvbiA9IFwiZGVzY3JpcHRpb25cIixcclxuICBFeGNoYW5nZUl0ZW1JZCA9IFwiZXhjaGFuZ2VpdGVtaWRcIixcclxuICBFeGNoYW5nZVJhdGUgPSBcImV4Y2hhbmdlcmF0ZVwiLFxyXG4gIEV4Y2hhbmdlV2ViTGluayA9IFwiZXhjaGFuZ2V3ZWJsaW5rXCIsXHJcbiAgRnJvbSA9IFwiZnJvbVwiLFxyXG4gIEltcG9ydFNlcXVlbmNlTnVtYmVyID0gXCJpbXBvcnRzZXF1ZW5jZW51bWJlclwiLFxyXG4gIEluc3RhbmNlVHlwZUNvZGUgPSBcImluc3RhbmNldHlwZWNvZGVcIixcclxuICBJc0JpbGxlZCA9IFwiaXNiaWxsZWRcIixcclxuICBJc01hcGlQcml2YXRlID0gXCJpc21hcGlwcml2YXRlXCIsXHJcbiAgSXNSZWd1bGFyQWN0aXZpdHkgPSBcImlzcmVndWxhcmFjdGl2aXR5XCIsXHJcbiAgSXNXb3JrZmxvd0NyZWF0ZWQgPSBcImlzd29ya2Zsb3djcmVhdGVkXCIsXHJcbiAgTGFzdE9uSG9sZFRpbWUgPSBcImxhc3RvbmhvbGR0aW1lXCIsXHJcbiAgTGVmdFZvaWNlTWFpbCA9IFwibGVmdHZvaWNlbWFpbFwiLFxyXG4gIE1vZGlmaWVkQnkgPSBcIm1vZGlmaWVkYnlcIixcclxuICBNb2RpZmllZEJ5RXh0ZXJuYWxQYXJ0eSA9IFwibW9kaWZpZWRieWV4dGVybmFscGFydHlcIixcclxuICBNb2RpZmllZEJ5RXh0ZXJuYWxQYXJ0eU5hbWUgPSBcIm1vZGlmaWVkYnlleHRlcm5hbHBhcnR5bmFtZVwiLFxyXG4gIE1vZGlmaWVkQnlFeHRlcm5hbFBhcnR5WW9taU5hbWUgPSBcIm1vZGlmaWVkYnlleHRlcm5hbHBhcnR5eW9taW5hbWVcIixcclxuICBNb2RpZmllZEJ5TmFtZSA9IFwibW9kaWZpZWRieW5hbWVcIixcclxuICBNb2RpZmllZEJ5WW9taU5hbWUgPSBcIm1vZGlmaWVkYnl5b21pbmFtZVwiLFxyXG4gIE1vZGlmaWVkT24gPSBcIm1vZGlmaWVkb25cIixcclxuICBNb2RpZmllZE9uQmVoYWxmQnkgPSBcIm1vZGlmaWVkb25iZWhhbGZieVwiLFxyXG4gIE1vZGlmaWVkT25CZWhhbGZCeU5hbWUgPSBcIm1vZGlmaWVkb25iZWhhbGZieW5hbWVcIixcclxuICBNb2RpZmllZE9uQmVoYWxmQnlZb21pTmFtZSA9IFwibW9kaWZpZWRvbmJlaGFsZmJ5eW9taW5hbWVcIixcclxuICBPbkhvbGRUaW1lID0gXCJvbmhvbGR0aW1lXCIsXHJcbiAgT3Bwb3J0dW5pdHlJZCA9IFwib3Bwb3J0dW5pdHlpZFwiLFxyXG4gIE9wcG9ydHVuaXR5SWROYW1lID0gXCJvcHBvcnR1bml0eWlkbmFtZVwiLFxyXG4gIE9wcG9ydHVuaXR5SWRUeXBlID0gXCJvcHBvcnR1bml0eWlkdHlwZVwiLFxyXG4gIE9wcG9ydHVuaXR5U3RhdGVDb2RlID0gXCJvcHBvcnR1bml0eXN0YXRlY29kZVwiLFxyXG4gIE9wcG9ydHVuaXR5U3RhdHVzQ29kZSA9IFwib3Bwb3J0dW5pdHlzdGF0dXNjb2RlXCIsXHJcbiAgT3B0aW9uYWxBdHRlbmRlZXMgPSBcIm9wdGlvbmFsYXR0ZW5kZWVzXCIsXHJcbiAgT3JnYW5pemVyID0gXCJvcmdhbml6ZXJcIixcclxuICBPdmVycmlkZGVuQ3JlYXRlZE9uID0gXCJvdmVycmlkZGVuY3JlYXRlZG9uXCIsXHJcbiAgT3duZXJJZCA9IFwib3duZXJpZFwiLFxyXG4gIE93bmVySWROYW1lID0gXCJvd25lcmlkbmFtZVwiLFxyXG4gIE93bmVySWRUeXBlID0gXCJvd25lcmlkdHlwZVwiLFxyXG4gIE93bmVySWRZb21pTmFtZSA9IFwib3duZXJpZHlvbWluYW1lXCIsXHJcbiAgT3duaW5nQnVzaW5lc3NVbml0ID0gXCJvd25pbmdidXNpbmVzc3VuaXRcIixcclxuICBPd25pbmdUZWFtID0gXCJvd25pbmd0ZWFtXCIsXHJcbiAgT3duaW5nVXNlciA9IFwib3duaW5ndXNlclwiLFxyXG4gIFBhcnRuZXJzID0gXCJwYXJ0bmVyc1wiLFxyXG4gIFBvc3Rwb25lQWN0aXZpdHlQcm9jZXNzaW5nVW50aWwgPSBcInBvc3Rwb25lYWN0aXZpdHlwcm9jZXNzaW5ndW50aWxcIixcclxuICBQcmlvcml0eUNvZGUgPSBcInByaW9yaXR5Y29kZVwiLFxyXG4gIFByb2Nlc3NJZCA9IFwicHJvY2Vzc2lkXCIsXHJcbiAgUmVnYXJkaW5nT2JqZWN0SWQgPSBcInJlZ2FyZGluZ29iamVjdGlkXCIsXHJcbiAgUmVnYXJkaW5nT2JqZWN0SWROYW1lID0gXCJyZWdhcmRpbmdvYmplY3RpZG5hbWVcIixcclxuICBSZWdhcmRpbmdPYmplY3RJZFlvbWlOYW1lID0gXCJyZWdhcmRpbmdvYmplY3RpZHlvbWluYW1lXCIsXHJcbiAgUmVnYXJkaW5nT2JqZWN0VHlwZUNvZGUgPSBcInJlZ2FyZGluZ29iamVjdHR5cGVjb2RlXCIsXHJcbiAgUmVxdWlyZWRBdHRlbmRlZXMgPSBcInJlcXVpcmVkYXR0ZW5kZWVzXCIsXHJcbiAgUmVzb3VyY2VzID0gXCJyZXNvdXJjZXNcIixcclxuICBTY2hlZHVsZWREdXJhdGlvbk1pbnV0ZXMgPSBcInNjaGVkdWxlZGR1cmF0aW9ubWludXRlc1wiLFxyXG4gIFNjaGVkdWxlZEVuZCA9IFwic2NoZWR1bGVkZW5kXCIsXHJcbiAgU2NoZWR1bGVkU3RhcnQgPSBcInNjaGVkdWxlZHN0YXJ0XCIsXHJcbiAgU2VuZGVyTWFpbGJveElkID0gXCJzZW5kZXJtYWlsYm94aWRcIixcclxuICBTZW5kZXJNYWlsYm94SWROYW1lID0gXCJzZW5kZXJtYWlsYm94aWRuYW1lXCIsXHJcbiAgU2VudE9uID0gXCJzZW50b25cIixcclxuICBTZXJpZXNJZCA9IFwic2VyaWVzaWRcIixcclxuICBTZXJ2aWNlSWQgPSBcInNlcnZpY2VpZFwiLFxyXG4gIFNlcnZpY2VJZE5hbWUgPSBcInNlcnZpY2VpZG5hbWVcIixcclxuICBTTEFJZCA9IFwic2xhaWRcIixcclxuICBTTEFJbnZva2VkSWQgPSBcInNsYWludm9rZWRpZFwiLFxyXG4gIFNMQUludm9rZWRJZE5hbWUgPSBcInNsYWludm9rZWRpZG5hbWVcIixcclxuICBTTEFOYW1lID0gXCJzbGFuYW1lXCIsXHJcbiAgU29ydERhdGUgPSBcInNvcnRkYXRlXCIsXHJcbiAgU3RhZ2VJZCA9IFwic3RhZ2VpZFwiLFxyXG4gIFN0YXRlQ29kZSA9IFwic3RhdGVjb2RlXCIsXHJcbiAgU3RhdHVzQ29kZSA9IFwic3RhdHVzY29kZVwiLFxyXG4gIFN1YmNhdGVnb3J5ID0gXCJzdWJjYXRlZ29yeVwiLFxyXG4gIFN1YmplY3QgPSBcInN1YmplY3RcIixcclxuICBUaW1lWm9uZVJ1bGVWZXJzaW9uTnVtYmVyID0gXCJ0aW1lem9uZXJ1bGV2ZXJzaW9ubnVtYmVyXCIsXHJcbiAgVG8gPSBcInRvXCIsXHJcbiAgVHJhbnNhY3Rpb25DdXJyZW5jeUlkID0gXCJ0cmFuc2FjdGlvbmN1cnJlbmN5aWRcIixcclxuICBUcmFuc2FjdGlvbkN1cnJlbmN5SWROYW1lID0gXCJ0cmFuc2FjdGlvbmN1cnJlbmN5aWRuYW1lXCIsXHJcbiAgVHJhdmVyc2VkUGF0aCA9IFwidHJhdmVyc2VkcGF0aFwiLFxyXG4gIFVUQ0NvbnZlcnNpb25UaW1lWm9uZUNvZGUgPSBcInV0Y2NvbnZlcnNpb250aW1lem9uZWNvZGVcIixcclxuICBWZXJzaW9uTnVtYmVyID0gXCJ2ZXJzaW9ubnVtYmVyXCIsXHJcbn1cclxuXHJcbi8vIEVhcmx5IEJvdW5kIEludGVyZmFjZVxyXG5leHBvcnQgaW50ZXJmYWNlIE9wcG9ydHVuaXR5Q2xvc2UgZXh0ZW5kcyBJRW50aXR5IHtcclxuICAvLyBBY3Rpdml0eSBBZGRpdGlvbmFsIFBhcmFtZXRlcnMgTWVtb1R5cGUgQWRkaXRpb25hbCBpbmZvcm1hdGlvbiBwcm92aWRlZCBieSB0aGUgZXh0ZXJuYWwgYXBwbGljYXRpb24gYXMgSlNPTi4gRm9yIGludGVybmFsIHVzZSBvbmx5LlxyXG4gIGFjdGl2aXR5YWRkaXRpb25hbHBhcmFtcz86IHN0cmluZyB8IG51bGw7XHJcbiAgLy8gT3Bwb3J0dW5pdHkgQ2xvc2UgVW5pcXVlaWRlbnRpZmllclR5cGUgVW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIG9wcG9ydHVuaXR5IGNsb3NlIGFjdGl2aXR5LlxyXG4gIGFjdGl2aXR5aWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkd1aWQgfCBudWxsO1xyXG4gIC8vIEFjdGl2aXR5IFR5cGUgRW50aXR5TmFtZVR5cGUgVHlwZSBvZiBhY3Rpdml0eS5cclxuICBhY3Rpdml0eXR5cGVjb2RlPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyBBY3R1YWwgRHVyYXRpb24gSW50ZWdlclR5cGUgQWN0dWFsIGR1cmF0aW9uIG9mIHRoZSBvcHBvcnR1bml0eSBjbG9zZSBhY3Rpdml0eSBpbiBtaW51dGVzLlxyXG4gIGFjdHVhbGR1cmF0aW9ubWludXRlcz86IG51bWJlciB8IG51bGw7XHJcbiAgLy8gQ2xvc2VkIE9uIERhdGVUaW1lVHlwZSBBY3R1YWwgZW5kIHRpbWUgb2YgdGhlIG9wcG9ydHVuaXR5IGNsb3NlIGFjdGl2aXR5LiBEYXRlT25seTpVc2VyTG9jYWxcclxuICBhY3R1YWxlbmQ/OiBEYXRlIHwgbnVsbDtcclxuICAvLyBBY3R1YWwgUmV2ZW51ZSBNb25leVR5cGUgQWN0dWFsIHJldmVudWUgZ2VuZXJhdGVkIGZvciB0aGUgb3Bwb3J0dW5pdHkuXHJcbiAgYWN0dWFscmV2ZW51ZT86IG51bWJlciB8IG51bGw7XHJcbiAgLy8gQWN0dWFsIFJldmVudWUgKEJhc2UpIE1vbmV5VHlwZSBWYWx1ZSBvZiB0aGUgQWN0dWFsIFJldmVudWUgaW4gYmFzZSBjdXJyZW5jeS5cclxuICBhY3R1YWxyZXZlbnVlX2Jhc2U/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8vIEFjdHVhbCBTdGFydCBEYXRlVGltZVR5cGUgQWN0dWFsIHN0YXJ0IHRpbWUgb2YgdGhlIG9wcG9ydHVuaXR5IGNsb3NlIGFjdGl2aXR5LiBEYXRlT25seTpVc2VyTG9jYWxcclxuICBhY3R1YWxzdGFydD86IERhdGUgfCBudWxsO1xyXG4gIC8vIEJDQyBQYXJ0eUxpc3RUeXBlIEJsaW5kIENhcmJvbi1jb3B5IChiY2MpIHJlY2lwaWVudHMgb2YgdGhlIGFjdGl2aXR5LlxyXG4gIGJjYz86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuQWN0aXZpdHlQYXJ0eVtdIHwgbnVsbDtcclxuICAvLyBDYXRlZ29yeSBTdHJpbmdUeXBlIENhdGVnb3J5IG9mIHRoZSBvcHBvcnR1bml0eSBjbG9zZSBhY3Rpdml0eS5cclxuICBjYXRlZ29yeT86IHN0cmluZyB8IG51bGw7XHJcbiAgLy8gQ0MgUGFydHlMaXN0VHlwZSBDYXJib24tY29weSAoY2MpIHJlY2lwaWVudHMgb2YgdGhlIGFjdGl2aXR5LlxyXG4gIGNjPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5BY3Rpdml0eVBhcnR5W10gfCBudWxsO1xyXG4gIC8vIFNvY2lhbCBDaGFubmVsIHNvY2lhbHByb2ZpbGVfY29tbXVuaXR5IFNob3dzIGhvdyBjb250YWN0IGFib3V0IHRoZSBzb2NpYWwgYWN0aXZpdHkgb3JpZ2luYXRlZCwgc3VjaCBhcyBmcm9tIFR3aXR0ZXIgb3IgRmFjZWJvb2suIFRoaXMgZmllbGQgaXMgcmVhZC1vbmx5LlxyXG4gIGNvbW11bml0eT86IGltcG9ydChcIi4uL2VudW1zL3NvY2lhbHByb2ZpbGVfY29tbXVuaXR5XCIpLnNvY2lhbHByb2ZpbGVfY29tbXVuaXR5IHwgbnVsbDtcclxuICAvLyBDb21wZXRpdG9yIExvb2t1cFR5cGUgVW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIGNvbXBldGl0b3Igd2l0aCB3aGljaCB0aGUgb3Bwb3J0dW5pdHkgY2xvc2UgYWN0aXZpdHkgaXMgYXNzb2NpYXRlZC5cclxuICBjb21wZXRpdG9yaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLy8gIFN0cmluZ1R5cGVcclxuICBjb21wZXRpdG9yaWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyAgU3RyaW5nVHlwZVxyXG4gIGNvbXBldGl0b3JpZHlvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyBDcmVhdGVkIEJ5IExvb2t1cFR5cGUgVW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIHVzZXIgd2hvIGNyZWF0ZWQgdGhlIG9wcG9ydHVuaXR5IGNsb3NlIGFjdGl2aXR5LlxyXG4gIGNyZWF0ZWRieT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvLyBDcmVhdGVkIEJ5IChFeHRlcm5hbCBQYXJ0eSkgTG9va3VwVHlwZSBTaG93cyB0aGUgZXh0ZXJuYWwgcGFydHkgd2hvIGNyZWF0ZWQgdGhlIHJlY29yZC5cclxuICBjcmVhdGVkYnlleHRlcm5hbHBhcnR5PzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgY3JlYXRlZGJ5ZXh0ZXJuYWxwYXJ0eW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgY3JlYXRlZGJ5ZXh0ZXJuYWxwYXJ0eXlvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyAgU3RyaW5nVHlwZVxyXG4gIGNyZWF0ZWRieW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgY3JlYXRlZGJ5eW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vIENyZWF0ZWQgT24gRGF0ZVRpbWVUeXBlIERhdGUgYW5kIHRpbWUgd2hlbiB0aGUgb3Bwb3J0dW5pdHkgY2xvc2UgYWN0aXZpdHkgd2FzIGNyZWF0ZWQuIERhdGVBbmRUaW1lOlVzZXJMb2NhbFxyXG4gIGNyZWF0ZWRvbj86IERhdGUgfCBudWxsO1xyXG4gIC8vIENyZWF0ZWQgQnkgKERlbGVnYXRlKSBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBkZWxlZ2F0ZSB1c2VyIHdobyBjcmVhdGVkIHRoZSBvcHBvcnR1bml0eWNsb3NlLlxyXG4gIGNyZWF0ZWRvbmJlaGFsZmJ5PzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgY3JlYXRlZG9uYmVoYWxmYnluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyAgU3RyaW5nVHlwZVxyXG4gIGNyZWF0ZWRvbmJlaGFsZmJ5eW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vIEN1c3RvbWVycyBQYXJ0eUxpc3RUeXBlIEN1c3RvbWVyIHdpdGggd2hpY2ggdGhlIGFjdGl2aXR5IGlzIGFzc29jaWF0ZWQuXHJcbiAgY3VzdG9tZXJzPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5BY3Rpdml0eVBhcnR5W10gfCBudWxsO1xyXG4gIC8vIERhdGUgRGVsaXZlcnkgTGFzdCBBdHRlbXB0ZWQgRGF0ZVRpbWVUeXBlIERhdGUgYW5kIHRpbWUgd2hlbiB0aGUgZGVsaXZlcnkgb2YgdGhlIGFjdGl2aXR5IHdhcyBsYXN0IGF0dGVtcHRlZC4gRGF0ZUFuZFRpbWU6VXNlckxvY2FsXHJcbiAgZGVsaXZlcnlsYXN0YXR0ZW1wdGVkb24/OiBEYXRlIHwgbnVsbDtcclxuICAvLyBEZWxpdmVyeSBQcmlvcml0eSBhY3Rpdml0eXBvaW50ZXJfZGVsaXZlcnlwcmlvcml0eWNvZGUgUHJpb3JpdHkgb2YgZGVsaXZlcnkgb2YgdGhlIGFjdGl2aXR5IHRvIHRoZSBlbWFpbCBzZXJ2ZXIuXHJcbiAgZGVsaXZlcnlwcmlvcml0eWNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9hY3Rpdml0eXBvaW50ZXJfZGVsaXZlcnlwcmlvcml0eWNvZGVcIikuYWN0aXZpdHlwb2ludGVyX2RlbGl2ZXJ5cHJpb3JpdHljb2RlIHwgbnVsbDtcclxuICAvLyBEZXNjcmlwdGlvbiBNZW1vVHlwZSBBY3Rpdml0eSB0aGF0IGlzIGNyZWF0ZWQgYXV0b21hdGljYWxseSB3aGVuIGFuIG9wcG9ydHVuaXR5IGlzIGNsb3NlZCwgY29udGFpbmluZyBpbmZvcm1hdGlvbiBzdWNoIGFzIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgY2xvc2luZyBhbmQgYWN0dWFsIHJldmVudWUuXHJcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vIEV4Y2hhbmdlIEl0ZW0gSUQgU3RyaW5nVHlwZSBUaGUgbWVzc2FnZSBpZCBvZiBhY3Rpdml0eSB3aGljaCBpcyByZXR1cm5lZCBmcm9tIEV4Y2hhbmdlIFNlcnZlci5cclxuICBleGNoYW5nZWl0ZW1pZD86IHN0cmluZyB8IG51bGw7XHJcbiAgLy8gRXhjaGFuZ2UgUmF0ZSBEZWNpbWFsVHlwZSBTaG93cyB0aGUgY29udmVyc2lvbiByYXRlIG9mIHRoZSByZWNvcmQncyBjdXJyZW5jeS4gVGhlIGV4Y2hhbmdlIHJhdGUgaXMgdXNlZCB0byBjb252ZXJ0IGFsbCBtb25leSBmaWVsZHMgaW4gdGhlIHJlY29yZCBmcm9tIHRoZSBsb2NhbCBjdXJyZW5jeSB0byB0aGUgc3lzdGVtJ3MgZGVmYXVsdCBjdXJyZW5jeS5cclxuICBleGNoYW5nZXJhdGU/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8vIEV4Y2hhbmdlIFdlYkxpbmsgU3RyaW5nVHlwZSBTaG93cyB0aGUgd2ViIGxpbmsgb2YgQWN0aXZpdHkgb2YgdHlwZSBlbWFpbC5cclxuICBleGNoYW5nZXdlYmxpbms/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vIEZyb20gUGFydHlMaXN0VHlwZSBQZXJzb24gd2hvIHRoZSBhY3Rpdml0eSBpcyBmcm9tLlxyXG4gIGZyb20/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkFjdGl2aXR5UGFydHlbXSB8IG51bGw7XHJcbiAgLy8gSW1wb3J0IFNlcXVlbmNlIE51bWJlciBJbnRlZ2VyVHlwZSBTZXF1ZW5jZSBudW1iZXIgb2YgdGhlIGltcG9ydCB0aGF0IGNyZWF0ZWQgdGhpcyByZWNvcmQuXHJcbiAgaW1wb3J0c2VxdWVuY2VudW1iZXI/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8vIFJlY3VycmluZyBJbnN0YW5jZSBUeXBlIG9wcG9ydHVuaXR5Y2xvc2VfX29wcG9ydHVuaXR5Y2xvc2VfaW5zdGFuY2V0eXBlY29kZSBUeXBlIG9mIGluc3RhbmNlIG9mIGEgcmVjdXJyaW5nIHNlcmllcy5cclxuICBpbnN0YW5jZXR5cGVjb2RlPzogaW1wb3J0KFwiLi4vZW51bXMvb3Bwb3J0dW5pdHljbG9zZV9fb3Bwb3J0dW5pdHljbG9zZV9pbnN0YW5jZXR5cGVjb2RlXCIpLm9wcG9ydHVuaXR5Y2xvc2VfX29wcG9ydHVuaXR5Y2xvc2VfaW5zdGFuY2V0eXBlY29kZSB8IG51bGw7XHJcbiAgLy8gSXMgQmlsbGVkIEJvb2xlYW5UeXBlIEluZm9ybWF0aW9uIGFib3V0IHdoZXRoZXIgdGhlIG9wcG9ydHVuaXR5IGNsb3NlIGFjdGl2aXR5IHdhcyBiaWxsZWQgYXMgcGFydCBvZiByZXNvbHZpbmcgYSBjYXNlLlxyXG4gIGlzYmlsbGVkPzogYm9vbGVhbiB8IG51bGw7XHJcbiAgLy8gSXMgUHJpdmF0ZSBCb29sZWFuVHlwZSBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXHJcbiAgaXNtYXBpcHJpdmF0ZT86IGJvb2xlYW4gfCBudWxsO1xyXG4gIC8vIElzIFJlZ3VsYXIgQWN0aXZpdHkgQm9vbGVhblR5cGUgSW5mb3JtYXRpb24gcmVnYXJkaW5nIHdoZXRoZXIgdGhlIGFjdGl2aXR5IGlzIGEgcmVndWxhciBhY3Rpdml0eSB0eXBlIG9yIGV2ZW50IHR5cGUuXHJcbiAgaXNyZWd1bGFyYWN0aXZpdHk/OiBib29sZWFuIHwgbnVsbDtcclxuICAvLyBJcyBXb3JrZmxvdyBDcmVhdGVkIEJvb2xlYW5UeXBlIEluZm9ybWF0aW9uIHRoYXQgc3BlY2lmaWVzIGlmIHRoZSBvcHBvcnR1bml0eSBjbG9zZSBhY3Rpdml0eSB3YXMgY3JlYXRlZCBmcm9tIGEgd29ya2Zsb3cgcnVsZS5cclxuICBpc3dvcmtmbG93Y3JlYXRlZD86IGJvb2xlYW4gfCBudWxsO1xyXG4gIC8vIExhc3QgT24gSG9sZCBUaW1lIERhdGVUaW1lVHlwZSBDb250YWlucyB0aGUgZGF0ZSBhbmQgdGltZSBzdGFtcCBvZiB0aGUgbGFzdCBvbiBob2xkIHRpbWUuIERhdGVBbmRUaW1lOlVzZXJMb2NhbFxyXG4gIGxhc3RvbmhvbGR0aW1lPzogRGF0ZSB8IG51bGw7XHJcbiAgLy8gTGVmdCBWb2ljZSBNYWlsIEJvb2xlYW5UeXBlIExlZnQgdGhlIHZvaWNlIG1haWxcclxuICBsZWZ0dm9pY2VtYWlsPzogYm9vbGVhbiB8IG51bGw7XHJcbiAgLy8gTW9kaWZpZWQgQnkgTG9va3VwVHlwZSBVbmlxdWUgaWRlbnRpZmllciBvZiB0aGUgdXNlciB3aG8gbGFzdCBtb2RpZmllZCB0aGUgb3Bwb3J0dW5pdHkgY2xvc2UgYWN0aXZpdHkuXHJcbiAgbW9kaWZpZWRieT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvLyBNb2RpZmllZCBCeSAoRXh0ZXJuYWwgUGFydHkpIExvb2t1cFR5cGUgU2hvd3MgdGhlIGV4dGVybmFsIHBhcnR5IHdobyBtb2RpZmllZCB0aGUgcmVjb3JkLlxyXG4gIG1vZGlmaWVkYnlleHRlcm5hbHBhcnR5PzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgbW9kaWZpZWRieWV4dGVybmFscGFydHluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyAgU3RyaW5nVHlwZVxyXG4gIG1vZGlmaWVkYnlleHRlcm5hbHBhcnR5eW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgbW9kaWZpZWRieW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgbW9kaWZpZWRieXlvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyBNb2RpZmllZCBPbiBEYXRlVGltZVR5cGUgRGF0ZSBhbmQgdGltZSB3aGVuIHRoZSBvcHBvcnR1bml0eSBjbG9zZSBhY3Rpdml0eSB3YXMgbGFzdCBtb2RpZmllZC4gRGF0ZUFuZFRpbWU6VXNlckxvY2FsXHJcbiAgbW9kaWZpZWRvbj86IERhdGUgfCBudWxsO1xyXG4gIC8vIE1vZGlmaWVkIEJ5IChEZWxlZ2F0ZSkgTG9va3VwVHlwZSBVbmlxdWUgaWRlbnRpZmllciBvZiB0aGUgZGVsZWdhdGUgdXNlciB3aG8gbGFzdCBtb2RpZmllZCB0aGUgb3Bwb3J0dW5pdHljbG9zZS5cclxuICBtb2RpZmllZG9uYmVoYWxmYnk/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLy8gIFN0cmluZ1R5cGVcclxuICBtb2RpZmllZG9uYmVoYWxmYnluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyAgU3RyaW5nVHlwZVxyXG4gIG1vZGlmaWVkb25iZWhhbGZieXlvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyBPbiBIb2xkIFRpbWUgKE1pbnV0ZXMpIEludGVnZXJUeXBlIFNob3dzIGhvdyBsb25nLCBpbiBtaW51dGVzLCB0aGF0IHRoZSByZWNvcmQgd2FzIG9uIGhvbGQuXHJcbiAgb25ob2xkdGltZT86IG51bWJlciB8IG51bGw7XHJcbiAgLy8gT3Bwb3J0dW5pdHkgW1JlcXVpcmVkXSBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBvcHBvcnR1bml0eSBjbG9zZWQuXHJcbiAgb3Bwb3J0dW5pdHlpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgb3Bwb3J0dW5pdHlpZG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vICBFbnRpdHlOYW1lVHlwZVxyXG4gIG9wcG9ydHVuaXR5aWR0eXBlPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyBTdGF0dXMgb3Bwb3J0dW5pdHljbG9zZV9vcHBvcnR1bml0eWNsb3NlX29wcG9ydHVuaXR5X3N0YXRlY29kZSBTdGF0dXMgb2YgdGhlIG9wcG9ydHVuaXR5LlxyXG4gIG9wcG9ydHVuaXR5c3RhdGVjb2RlPzogaW1wb3J0KFwiLi4vZW51bXMvb3Bwb3J0dW5pdHljbG9zZV9vcHBvcnR1bml0eWNsb3NlX29wcG9ydHVuaXR5X3N0YXRlY29kZVwiKS5vcHBvcnR1bml0eWNsb3NlX29wcG9ydHVuaXR5Y2xvc2Vfb3Bwb3J0dW5pdHlfc3RhdGVjb2RlIHwgbnVsbDtcclxuICAvLyBTdGF0dXMgUmVhc29uIG9wcG9ydHVuaXR5Y2xvc2VfT3Bwb3J0dW5pdHlDbG9zZV9vcHBvcnR1bml0eV9zdGF0dXNjb2RlIFN0YXR1cyByZWFzb24gb2YgdGhlIG9wcG9ydHVuaXR5LlxyXG4gIG9wcG9ydHVuaXR5c3RhdHVzY29kZT86IGltcG9ydChcIi4uL2VudW1zL29wcG9ydHVuaXR5Y2xvc2VfT3Bwb3J0dW5pdHlDbG9zZV9vcHBvcnR1bml0eV9zdGF0dXNjb2RlXCIpLm9wcG9ydHVuaXR5Y2xvc2VfT3Bwb3J0dW5pdHlDbG9zZV9vcHBvcnR1bml0eV9zdGF0dXNjb2RlIHwgbnVsbDtcclxuICAvLyBPcHRpb25hbCBBdHRlbmRlZXMgUGFydHlMaXN0VHlwZSBMaXN0IG9mIG9wdGlvbmFsIGF0dGVuZGVlcyBmb3IgdGhlIGFjdGl2aXR5LlxyXG4gIG9wdGlvbmFsYXR0ZW5kZWVzPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5BY3Rpdml0eVBhcnR5W10gfCBudWxsO1xyXG4gIC8vIE9yZ2FuaXplciBQYXJ0eUxpc3RUeXBlIFBlcnNvbiB3aG8gb3JnYW5pemVkIHRoZSBhY3Rpdml0eS5cclxuICBvcmdhbml6ZXI/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkFjdGl2aXR5UGFydHlbXSB8IG51bGw7XHJcbiAgLy8gUmVjb3JkIENyZWF0ZWQgT24gRGF0ZVRpbWVUeXBlIERhdGUgYW5kIHRpbWUgdGhhdCB0aGUgcmVjb3JkIHdhcyBtaWdyYXRlZC4gRGF0ZU9ubHk6VXNlckxvY2FsXHJcbiAgb3ZlcnJpZGRlbmNyZWF0ZWRvbj86IERhdGUgfCBudWxsO1xyXG4gIC8vIE93bmVyIE93bmVyVHlwZSBVbmlxdWUgaWRlbnRpZmllciBvZiB0aGUgdXNlciBvciB0ZWFtIHdobyBvd25zIHRoZSBhY3Rpdml0eS5cclxuICBvd25lcmlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgb3duZXJpZG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vICBFbnRpdHlOYW1lVHlwZVxyXG4gIG93bmVyaWR0eXBlPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyAgU3RyaW5nVHlwZVxyXG4gIG93bmVyaWR5b21pbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLy8gT3duaW5nIEJ1c2luZXNzIFVuaXQgTG9va3VwVHlwZSBVbmlxdWUgaWRlbnRpZmllciBvZiB0aGUgYnVzaW5lc3MgdW5pdCB0aGF0IG93bnMgdGhlIGFjdGl2aXR5LlxyXG4gIG93bmluZ2J1c2luZXNzdW5pdD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvLyBPd25pbmcgVGVhbSBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSB0ZWFtIHRoYXQgb3ducyB0aGUgYWN0aXZpdHkuXHJcbiAgb3duaW5ndGVhbT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvLyBPd25pbmcgVXNlciBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSB1c2VyIHRoYXQgb3ducyB0aGUgYWN0aXZpdHkuXHJcbiAgb3duaW5ndXNlcj86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvLyBPdXRzb3VyY2UgVmVuZG9ycyBQYXJ0eUxpc3RUeXBlIE91dHNvdXJjZSB2ZW5kb3Igd2l0aCB3aGljaCBhY3Rpdml0eSBpcyBhc3NvY2lhdGVkLlxyXG4gIHBhcnRuZXJzPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5BY3Rpdml0eVBhcnR5W10gfCBudWxsO1xyXG4gIC8vIERlbGF5IGFjdGl2aXR5IHByb2Nlc3NpbmcgdW50aWwgRGF0ZVRpbWVUeXBlIEZvciBpbnRlcm5hbCB1c2Ugb25seS4gRGF0ZUFuZFRpbWU6VXNlckxvY2FsXHJcbiAgcG9zdHBvbmVhY3Rpdml0eXByb2Nlc3Npbmd1bnRpbD86IERhdGUgfCBudWxsO1xyXG4gIC8vIFByaW9yaXR5IG9wcG9ydHVuaXR5Y2xvc2VfX29wcG9ydHVuaXR5Y2xvc2VfcHJpb3JpdHljb2RlIFByaW9yaXR5IG9mIHRoZSBhY3Rpdml0eS5cclxuICBwcmlvcml0eWNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9vcHBvcnR1bml0eWNsb3NlX19vcHBvcnR1bml0eWNsb3NlX3ByaW9yaXR5Y29kZVwiKS5vcHBvcnR1bml0eWNsb3NlX19vcHBvcnR1bml0eWNsb3NlX3ByaW9yaXR5Y29kZSB8IG51bGw7XHJcbiAgLy8gUHJvY2VzcyBVbmlxdWVpZGVudGlmaWVyVHlwZSBVbmlxdWUgaWRlbnRpZmllciBvZiB0aGUgUHJvY2Vzcy5cclxuICBwcm9jZXNzaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkd1aWQgfCBudWxsO1xyXG4gIC8vIFJlZ2FyZGluZyBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBvYmplY3Qgd2l0aCB3aGljaCB0aGUgYWN0aXZpdHkgaXMgYXNzb2NpYXRlZC5cclxuICByZWdhcmRpbmdvYmplY3RpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvLyAgU3RyaW5nVHlwZVxyXG4gIHJlZ2FyZGluZ29iamVjdGlkbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLy8gIFN0cmluZ1R5cGVcclxuICByZWdhcmRpbmdvYmplY3RpZHlvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvLyAgRW50aXR5TmFtZVR5cGVcclxuICByZWdhcmRpbmdvYmplY3R0eXBlY29kZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLy8gUmVxdWlyZWQgQXR0ZW5kZWVzIFBhcnR5TGlzdFR5cGUgTGlzdCBvZiByZXF1aXJlZCBhdHRlbmRlZXMgZm9yIHRoZSBhY3Rpdml0eS5cclxuICByZXF1aXJlZGF0dGVuZGVlcz86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuQWN0aXZpdHlQYXJ0eVtdIHwgbnVsbDtcclxuICAvLyBSZXNvdXJjZXMgUGFydHlMaXN0VHlwZSBVc2VycyBvciBmYWNpbGl0eS9lcXVpcG1lbnQgdGhhdCBhcmUgcmVxdWlyZWQgZm9yIHRoZSBhY3Rpdml0eS5cclxuICByZXNvdXJjZXM/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkFjdGl2aXR5UGFydHlbXSB8IG51bGw7XHJcbiAgLy8gU2NoZWR1bGVkIER1cmF0aW9uIEludGVnZXJUeXBlIFNjaGVkdWxlZCBkdXJhdGlvbiBvZiB0aGUgb3Bwb3J0dW5pdHkgY2xvc2UgYWN0aXZpdHksIHNwZWNpZmllZCBpbiBtaW51dGVzLlxyXG4gIHNjaGVkdWxlZGR1cmF0aW9ubWludXRlcz86IG51bWJlciB8IG51bGw7XHJcbiAgLy8gU2NoZWR1bGVkIEVuZCBEYXRlVGltZVR5cGUgU2NoZWR1bGVkIGVuZCB0aW1lIG9mIHRoZSBvcHBvcnR1bml0eSBjbG9zZSBhY3Rpdml0eS4gRGF0ZU9ubHk6VXNlckxvY2FsXHJcbiAgc2NoZWR1bGVkZW5kPzogRGF0ZSB8IG51bGw7XHJcbiAgLy8gU2NoZWR1bGVkIFN0YXJ0IERhdGVUaW1lVHlwZSBTY2hlZHVsZWQgc3RhcnQgdGltZSBvZiB0aGUgb3Bwb3J0dW5pdHkgY2xvc2UgYWN0aXZpdHkuIERhdGVPbmx5OlVzZXJMb2NhbFxyXG4gIHNjaGVkdWxlZHN0YXJ0PzogRGF0ZSB8IG51bGw7XHJcbiAgLy8gU2VuZGVyJ3MgTWFpbGJveCBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBtYWlsYm94IGFzc29jaWF0ZWQgd2l0aCB0aGUgc2VuZGVyIG9mIHRoZSBlbWFpbCBtZXNzYWdlLlxyXG4gIHNlbmRlcm1haWxib3hpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvLyAgU3RyaW5nVHlwZVxyXG4gIHNlbmRlcm1haWxib3hpZG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vIERhdGUgU2VudCBEYXRlVGltZVR5cGUgRGF0ZSBhbmQgdGltZSB3aGVuIHRoZSBhY3Rpdml0eSB3YXMgc2VudC4gRGF0ZUFuZFRpbWU6VXNlckxvY2FsXHJcbiAgc2VudG9uPzogRGF0ZSB8IG51bGw7XHJcbiAgLy8gU2VyaWVzIElkIFVuaXF1ZWlkZW50aWZpZXJUeXBlIFVuaXF1ZWlkZW50aWZpZXIgc3BlY2lmeWluZyB0aGUgaWQgb2YgcmVjdXJyaW5nIHNlcmllcyBvZiBhbiBpbnN0YW5jZS5cclxuICBzZXJpZXNpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuR3VpZCB8IG51bGw7XHJcbiAgLy8gU2VydmljZSBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBzZXJ2aWNlIHdpdGggd2hpY2ggdGhlIG9wcG9ydHVuaXR5IGNsb3NlIGFjdGl2aXR5IGlzIGFzc29jaWF0ZWQuXHJcbiAgc2VydmljZWlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgc2VydmljZWlkbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLy8gU0xBIExvb2t1cFR5cGUgQ2hvb3NlIHRoZSBzZXJ2aWNlIGxldmVsIGFncmVlbWVudCAoU0xBKSB0aGF0IHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjYXNlIHJlY29yZC5cclxuICBzbGFpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvLyBMYXN0IFNMQSBhcHBsaWVkIExvb2t1cFR5cGUgTGFzdCBTTEEgdGhhdCB3YXMgYXBwbGllZCB0byB0aGlzIGNhc2UuIFRoaXMgZmllbGQgaXMgZm9yIGludGVybmFsIHVzZSBvbmx5LlxyXG4gIHNsYWludm9rZWRpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvLyAgU3RyaW5nVHlwZVxyXG4gIHNsYWludm9rZWRpZG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgc2xhbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLy8gU29ydCBEYXRlIERhdGVUaW1lVHlwZSBTaG93cyB0aGUgZGF0ZSBhbmQgdGltZSBieSB3aGljaCB0aGUgYWN0aXZpdGllcyBhcmUgc29ydGVkLiBEYXRlQW5kVGltZTpVc2VyTG9jYWxcclxuICBzb3J0ZGF0ZT86IERhdGUgfCBudWxsO1xyXG4gIC8vIChEZXByZWNhdGVkKSBQcm9jZXNzIFN0YWdlIFVuaXF1ZWlkZW50aWZpZXJUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBTdGFnZS5cclxuICBzdGFnZWlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5HdWlkIHwgbnVsbDtcclxuICAvLyBTdGF0dXMgb3Bwb3J0dW5pdHljbG9zZV9vcHBvcnR1bml0eWNsb3NlX3N0YXRlY29kZSBTaG93cyB3aGV0aGVyIHRoZSBvcHBvcnR1bml0eSBjbG9zZSBhY3Rpdml0eSBpcyBvcGVuLCBjb21wbGV0ZWQsIG9yIGNhbmNlbGVkLiAgQnkgZGVmYXVsdCwgb3Bwb3J0dW5pdHkgY2xvc2UgYWN0aXZpdGllcyBhcmUgY29tcGxldGVkIHVubGVzcyB0aGUgb3Bwb3J0dW5pdHkgaXMgcmVhY3RpdmF0ZWQsICB3aGljaCB1cGRhdGVzIHRoZW0gdG8gY2FuY2VsZWQuXHJcbiAgc3RhdGVjb2RlPzogaW1wb3J0KFwiLi4vZW51bXMvb3Bwb3J0dW5pdHljbG9zZV9vcHBvcnR1bml0eWNsb3NlX3N0YXRlY29kZVwiKS5vcHBvcnR1bml0eWNsb3NlX29wcG9ydHVuaXR5Y2xvc2Vfc3RhdGVjb2RlIHwgbnVsbDtcclxuICAvLyBTdGF0dXMgUmVhc29uIG9wcG9ydHVuaXR5Y2xvc2Vfb3Bwb3J0dW5pdHljbG9zZV9zdGF0dXNjb2RlIFJlYXNvbiBmb3IgdGhlIHN0YXR1cyBvZiB0aGUgb3Bwb3J0dW5pdHkgY2xvc2UgYWN0aXZpdHkuXHJcbiAgc3RhdHVzY29kZT86IGltcG9ydChcIi4uL2VudW1zL29wcG9ydHVuaXR5Y2xvc2Vfb3Bwb3J0dW5pdHljbG9zZV9zdGF0dXNjb2RlXCIpLm9wcG9ydHVuaXR5Y2xvc2Vfb3Bwb3J0dW5pdHljbG9zZV9zdGF0dXNjb2RlIHwgbnVsbDtcclxuICAvLyBTdWItQ2F0ZWdvcnkgU3RyaW5nVHlwZSBTdWJjYXRlZ29yeSBvZiB0aGUgb3Bwb3J0dW5pdHkgY2xvc2UgYWN0aXZpdHkuXHJcbiAgc3ViY2F0ZWdvcnk/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vIFN1YmplY3QgU3RyaW5nVHlwZSBTdWJqZWN0IGFzc29jaWF0ZWQgd2l0aCB0aGUgb3Bwb3J0dW5pdHkgY2xvc2UgYWN0aXZpdHkuXHJcbiAgc3ViamVjdD86IHN0cmluZyB8IG51bGw7XHJcbiAgLy8gVGltZSBab25lIFJ1bGUgVmVyc2lvbiBOdW1iZXIgSW50ZWdlclR5cGUgRm9yIGludGVybmFsIHVzZSBvbmx5LlxyXG4gIHRpbWV6b25lcnVsZXZlcnNpb25udW1iZXI/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8vIFRvIFBhcnR5TGlzdFR5cGUgUGVyc29uIHdobyBpcyB0aGUgcmVjZWl2ZXIgb2YgdGhlIGFjdGl2aXR5LlxyXG4gIHRvPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5BY3Rpdml0eVBhcnR5W10gfCBudWxsO1xyXG4gIC8vIEN1cnJlbmN5IExvb2t1cFR5cGUgQ2hvb3NlIHRoZSBsb2NhbCBjdXJyZW5jeSBmb3IgdGhlIHJlY29yZCB0byBtYWtlIHN1cmUgYnVkZ2V0cyBhcmUgcmVwb3J0ZWQgaW4gdGhlIGNvcnJlY3QgY3VycmVuY3kuXHJcbiAgdHJhbnNhY3Rpb25jdXJyZW5jeWlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8vICBTdHJpbmdUeXBlXHJcbiAgdHJhbnNhY3Rpb25jdXJyZW5jeWlkbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLy8gKERlcHJlY2F0ZWQpIFRyYXZlcnNlZCBQYXRoIFN0cmluZ1R5cGUgRm9yIGludGVybmFsIHVzZSBvbmx5LlxyXG4gIHRyYXZlcnNlZHBhdGg/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8vIFVUQyBDb252ZXJzaW9uIFRpbWUgWm9uZSBDb2RlIEludGVnZXJUeXBlIFRpbWUgem9uZSBjb2RlIHRoYXQgd2FzIGluIHVzZSB3aGVuIHRoZSByZWNvcmQgd2FzIGNyZWF0ZWQuXHJcbiAgdXRjY29udmVyc2lvbnRpbWV6b25lY29kZT86IG51bWJlciB8IG51bGw7XHJcbiAgLy8gVmVyc2lvbiBOdW1iZXIgQmlnSW50VHlwZSBWZXJzaW9uIG51bWJlciBvZiB0aGUgYWN0aXZpdHkuXHJcbiAgdmVyc2lvbm51bWJlcj86IG51bWJlciB8IG51bGw7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/OpportunityClose.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/metadata.ts":
/*!***************************************!*\
  !*** ./src/dataverse-gen/metadata.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Entities\": () => (/* binding */ Entities),\n/* harmony export */   \"metadataCache\": () => (/* binding */ metadataCache)\n/* harmony export */ });\n/* harmony import */ var _entities_Account__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entities/Account */ \"./src/dataverse-gen/entities/Account.ts\");\n/* harmony import */ var _entities_ActivityParty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./entities/ActivityParty */ \"./src/dataverse-gen/entities/ActivityParty.ts\");\n/* harmony import */ var _entities_Email__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./entities/Email */ \"./src/dataverse-gen/entities/Email.ts\");\n/* harmony import */ var _entities_Opportunity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./entities/Opportunity */ \"./src/dataverse-gen/entities/Opportunity.ts\");\n/* harmony import */ var _entities_OpportunityClose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./entities/OpportunityClose */ \"./src/dataverse-gen/entities/OpportunityClose.ts\");\n/* harmony import */ var _actions_WinOpportunity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./actions/WinOpportunity */ \"./src/dataverse-gen/actions/WinOpportunity.ts\");\n/* eslint-disable*/\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar Entities = {\r\n    Account: \"account\",\r\n    ActivityParty: \"activityparty\",\r\n    Email: \"email\",\r\n    Opportunity: \"opportunity\",\r\n    OpportunityClose: \"opportunityclose\",\r\n};\r\n// Setup Metadata\r\n// Usage: setMetadataCache(metadataCache);\r\nvar metadataCache = {\r\n    entities: {\r\n        account: _entities_Account__WEBPACK_IMPORTED_MODULE_0__.accountMetadata,\r\n        activityparty: _entities_ActivityParty__WEBPACK_IMPORTED_MODULE_1__.activitypartyMetadata,\r\n        email: _entities_Email__WEBPACK_IMPORTED_MODULE_2__.emailMetadata,\r\n        opportunity: _entities_Opportunity__WEBPACK_IMPORTED_MODULE_3__.opportunityMetadata,\r\n        opportunityclose: _entities_OpportunityClose__WEBPACK_IMPORTED_MODULE_4__.opportunitycloseMetadata,\r\n    },\r\n    actions: {\r\n        WinOpportunity: _actions_WinOpportunity__WEBPACK_IMPORTED_MODULE_5__.WinOpportunityMetadata,\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9zcmMvZGF0YXZlcnNlLWdlbi9tZXRhZGF0YS50cz8xODY5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsbUJBQW1CO0FBQ2tDO0FBQ1k7QUFDaEI7QUFDWTtBQUNVO0FBQ0w7QUFFM0QsSUFBTSxRQUFRLEdBQUc7SUFDdEIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsYUFBYSxFQUFFLGVBQWU7SUFDOUIsS0FBSyxFQUFFLE9BQU87SUFDZCxXQUFXLEVBQUUsYUFBYTtJQUMxQixnQkFBZ0IsRUFBRSxrQkFBa0I7Q0FDckMsQ0FBQztBQUVGLGlCQUFpQjtBQUNqQiwwQ0FBMEM7QUFDbkMsSUFBTSxhQUFhLEdBQUc7SUFDM0IsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLDhEQUFlO1FBQ3hCLGFBQWEsRUFBRSwwRUFBcUI7UUFDcEMsS0FBSyxFQUFFLDBEQUFhO1FBQ3BCLFdBQVcsRUFBRSxzRUFBbUI7UUFDaEMsZ0JBQWdCLEVBQUUsZ0ZBQXdCO0tBQzNDO0lBQ0QsT0FBTyxFQUFFO1FBQ1AsY0FBYyxFQUFFLDJFQUFzQjtLQUN2QztDQUNGLENBQUMiLCJmaWxlIjoiLi9zcmMvZGF0YXZlcnNlLWdlbi9tZXRhZGF0YS50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlKi9cclxuaW1wb3J0IHsgYWNjb3VudE1ldGFkYXRhIH0gZnJvbSBcIi4vZW50aXRpZXMvQWNjb3VudFwiO1xyXG5pbXBvcnQgeyBhY3Rpdml0eXBhcnR5TWV0YWRhdGEgfSBmcm9tIFwiLi9lbnRpdGllcy9BY3Rpdml0eVBhcnR5XCI7XHJcbmltcG9ydCB7IGVtYWlsTWV0YWRhdGEgfSBmcm9tIFwiLi9lbnRpdGllcy9FbWFpbFwiO1xyXG5pbXBvcnQgeyBvcHBvcnR1bml0eU1ldGFkYXRhIH0gZnJvbSBcIi4vZW50aXRpZXMvT3Bwb3J0dW5pdHlcIjtcclxuaW1wb3J0IHsgb3Bwb3J0dW5pdHljbG9zZU1ldGFkYXRhIH0gZnJvbSBcIi4vZW50aXRpZXMvT3Bwb3J0dW5pdHlDbG9zZVwiO1xyXG5pbXBvcnQgeyBXaW5PcHBvcnR1bml0eU1ldGFkYXRhIH0gZnJvbSBcIi4vYWN0aW9ucy9XaW5PcHBvcnR1bml0eVwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IEVudGl0aWVzID0ge1xyXG4gIEFjY291bnQ6IFwiYWNjb3VudFwiLFxyXG4gIEFjdGl2aXR5UGFydHk6IFwiYWN0aXZpdHlwYXJ0eVwiLFxyXG4gIEVtYWlsOiBcImVtYWlsXCIsXHJcbiAgT3Bwb3J0dW5pdHk6IFwib3Bwb3J0dW5pdHlcIixcclxuICBPcHBvcnR1bml0eUNsb3NlOiBcIm9wcG9ydHVuaXR5Y2xvc2VcIixcclxufTtcclxuXHJcbi8vIFNldHVwIE1ldGFkYXRhXHJcbi8vIFVzYWdlOiBzZXRNZXRhZGF0YUNhY2hlKG1ldGFkYXRhQ2FjaGUpO1xyXG5leHBvcnQgY29uc3QgbWV0YWRhdGFDYWNoZSA9IHtcclxuICBlbnRpdGllczoge1xyXG4gICAgYWNjb3VudDogYWNjb3VudE1ldGFkYXRhLFxyXG4gICAgYWN0aXZpdHlwYXJ0eTogYWN0aXZpdHlwYXJ0eU1ldGFkYXRhLFxyXG4gICAgZW1haWw6IGVtYWlsTWV0YWRhdGEsXHJcbiAgICBvcHBvcnR1bml0eTogb3Bwb3J0dW5pdHlNZXRhZGF0YSxcclxuICAgIG9wcG9ydHVuaXR5Y2xvc2U6IG9wcG9ydHVuaXR5Y2xvc2VNZXRhZGF0YSxcclxuICB9LFxyXG4gIGFjdGlvbnM6IHtcclxuICAgIFdpbk9wcG9ydHVuaXR5OiBXaW5PcHBvcnR1bml0eU1ldGFkYXRhLFxyXG4gIH1cclxufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/dataverse-gen/metadata.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AccountForm\": () => (/* reexport safe */ _Forms_AccountForm__WEBPACK_IMPORTED_MODULE_0__.AccountForm),\n/* harmony export */   \"AccountRibbon\": () => (/* reexport safe */ _Ribbon_AccountRibbon__WEBPACK_IMPORTED_MODULE_1__.AccountRibbon)\n/* harmony export */ });\n/* harmony import */ var _Forms_AccountForm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Forms/AccountForm */ \"./src/Forms/AccountForm.ts\");\n/* harmony import */ var _Ribbon_AccountRibbon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Ribbon/AccountRibbon */ \"./src/Ribbon/AccountRibbon.ts\");\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHMuQ2xpZW50SG9va3MvLi9zcmMvaW5kZXgudHM/ZmZiNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9DO0FBQ0ciLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9Gb3Jtcy9BY2NvdW50Rm9ybVwiO1xyXG5leHBvcnQgKiBmcm9tIFwiLi9SaWJib24vQWNjb3VudFJpYmJvblwiO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	(cds = typeof cds === "undefined" ? {} : cds).ClientHooks = __webpack_exports__;
/******/ 	
/******/ })()
;